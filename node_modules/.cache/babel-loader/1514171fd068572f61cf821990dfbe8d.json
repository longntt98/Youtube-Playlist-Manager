{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoPlayer.js\";\nimport React, { useState, useEffect } from 'react';\nimport { db } from \"../firebase/firebase\";\nimport PlaylistItem from './MyPlaylistItem';\nimport VideoStream from './VideoStream';\nconst UID = localStorage.getItem(\"UID\");\n\nfunction VideoPlayer(props) {\n  const [dataFromDB, setDataFromDB] = useState([]);\n  const [nextVideo, setNextVideo] = useState(\"\");\n  const [videoID, setVideoID] = useState(\"\");\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [playlistTitle, setPlaylistTitle] = useState(\"\");\n  const [commentDetail, setCommentDetail] = useState(\"\");\n  useEffect(() => {\n    db.ref(`playlist/public/${props.match.params.playlistID}`).on(\"value\", data => {\n      let accessModifier = \"\";\n\n      if (data.val()) {\n        accessModifier = \"public\";\n      } else accessModifier = \"private\";\n\n      const db1 = db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}/playlistVideo`);\n      db1.on(\"value\", data => {\n        let array = [];\n        data.forEach(element => {\n          array.push({\n            videoID: element.key,\n            videoTitle: element.val().videoTitle,\n            videoThumbnail: element.val().videoThumbnail\n          });\n        });\n        setDataFromDB([...array]);\n      });\n      const db2 = db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}/playlistVideo/${props.match.params.videoID}`);\n      db2.on(\"value\", data2 => {\n        setVideoID(props.match.params.videoID);\n        setNextVideo(data2.val().nextVideo);\n        setVideoTitle(data2.val().videoTitle);\n      });\n      const db3 = db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}`);\n      db3.on(\"value\", data => setPlaylistTitle(data.val().playlistTitle));\n    });\n  }, [props.match.params.videoID, props.match.params.playlistID]);\n\n  const getVideo = () => {\n    if (dataFromDB) {\n      return dataFromDB.map((value, key) => {\n        return /*#__PURE__*/React.createElement(PlaylistItem, {\n          key: key,\n          videoID: value.videoID,\n          videoThumbnail: value.videoThumbnail,\n          videoTitle: value.videoTitle,\n          playlistID: props.match.params.playlistID,\n          videoID2: (videoID, videoTitle) => getVideoID(videoID, videoTitle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 24\n          }\n        });\n      });\n    }\n  };\n\n  const getVideoID = (videoID, videoTitle) => {\n    setVideoID(videoID);\n    setVideoTitle(videoTitle);\n  };\n\n  const func = params => {\n    setVideoID(params);\n  };\n\n  const isChange = event => {\n    setCommentDetail(event.target.value);\n  };\n\n  const pushComment = () => {\n    if (UID) {\n      if (commentDetail) {\n        console.log(\"abc\");\n        db.ref(`playlist/public/${props.match.params.playlistID}`).on(\"value\", data => {\n          let accessModifier = \"\";\n\n          if (data.val()) {\n            accessModifier = \"public\";\n          } else accessModifier = \"private\";\n\n          db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}/playlistComment`).push({\n            UID: UID,\n            commentDetail: commentDetail\n          });\n          alert(\"Bình luận thành công\");\n        });\n      } else alert(\"Vui lòng nhập nội dung bình luận\");\n    } else alert(\"Vui lòng đăng nhập để bình luận\");\n\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VideoStream, {\n    videoID: props.match.params.videoID,\n    nextVideo: nextVideo,\n    func: params => func(params),\n    playlistID: props.match.params.playlistID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"videoplayer-video-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, videoTitle)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    style: {\n      height: \"430px\",\n      overflowY: \"auto\",\n      overflowX: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"videoplayer-video-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, playlistTitle, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 79\n    }\n  }), \"Quantity: 1/n\"), getVideo()))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"button-group col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"B\\xECnh lu\\u1EADn:\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexWrap: \"wrap\",\n      display: \"flex\",\n      height: \"45px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => isChange(event),\n    className: \"form-control col\",\n    placeholder: \"B\\xECnh lu\\u1EADn c\\xF4ng khai ....\",\n    \"aria-describedby\": \"helpId\",\n    style: {\n      height: \"auto\",\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => pushComment(),\n    className: \"col-2\",\n    className: \"btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"B\\xECnh lu\\u1EADn:\"))));\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoPlayer.js"],"names":["React","useState","useEffect","db","PlaylistItem","VideoStream","UID","localStorage","getItem","VideoPlayer","props","dataFromDB","setDataFromDB","nextVideo","setNextVideo","videoID","setVideoID","videoTitle","setVideoTitle","playlistTitle","setPlaylistTitle","commentDetail","setCommentDetail","ref","match","params","playlistID","on","data","accessModifier","val","db1","array","forEach","element","push","key","videoThumbnail","db2","data2","db3","getVideo","map","value","getVideoID","func","isChange","event","target","pushComment","console","log","alert","height","overflowY","overflowX","backgroundColor","flexWrap","display","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { db } from \"../firebase/firebase\"\r\nimport PlaylistItem from './MyPlaylistItem';\r\nimport VideoStream from './VideoStream';\r\n\r\nconst UID = localStorage.getItem(\"UID\");\r\nfunction VideoPlayer(props) {\r\n    const [dataFromDB, setDataFromDB] = useState([]);\r\n    const [nextVideo, setNextVideo] = useState(\"\");\r\n    const [videoID, setVideoID] = useState(\"\");\r\n    const [videoTitle, setVideoTitle] = useState(\"\");\r\n    const [playlistTitle, setPlaylistTitle] = useState(\"\");\r\n    const [commentDetail, setCommentDetail] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        db.ref(`playlist/public/${props.match.params.playlistID}`).on(\"value\", data => {\r\n            let accessModifier = \"\";\r\n            if (data.val()) {\r\n                accessModifier = \"public\";\r\n            } else accessModifier = \"private\";\r\n            const db1 = db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}/playlistVideo`)\r\n            db1.on(\"value\", data => {\r\n                let array = [];\r\n                data.forEach(element => {\r\n                    array.push({\r\n                        videoID: element.key,\r\n                        videoTitle: element.val().videoTitle,\r\n                        videoThumbnail: element.val().videoThumbnail,\r\n                    })\r\n                })\r\n                setDataFromDB([...array])\r\n            })\r\n            const db2 = db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}/playlistVideo/${props.match.params.videoID}`)\r\n            db2.on(\"value\", data2 => {\r\n                setVideoID(props.match.params.videoID);\r\n                setNextVideo(data2.val().nextVideo);\r\n                setVideoTitle(data2.val().videoTitle);\r\n            })\r\n\r\n            const db3 = db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}`);\r\n            db3.on(\"value\", data => setPlaylistTitle(data.val().playlistTitle));\r\n        })\r\n\r\n    }, [props.match.params.videoID, props.match.params.playlistID]);\r\n\r\n    const getVideo = () => {\r\n        if (dataFromDB) {\r\n            return dataFromDB.map((value, key) => {\r\n                return <PlaylistItem\r\n\r\n                    key={key}\r\n                    videoID={value.videoID}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                    videoTitle={value.videoTitle}\r\n                    playlistID={props.match.params.playlistID}\r\n                    videoID2={(videoID, videoTitle) => getVideoID(videoID, videoTitle)}\r\n                />\r\n            })\r\n        }\r\n    }\r\n\r\n    const getVideoID = (videoID, videoTitle) => {\r\n        setVideoID(videoID);\r\n        setVideoTitle(videoTitle);\r\n    }\r\n\r\n    const func = (params) => {\r\n        setVideoID(params)\r\n    }\r\n\r\n    const isChange = (event) => {\r\n        setCommentDetail(event.target.value);\r\n    }\r\n\r\n    const pushComment = () => {\r\n        if (UID) {\r\n            if (commentDetail) {\r\n                console.log(\"abc\");\r\n                db.ref(`playlist/public/${props.match.params.playlistID}`).on(\"value\", data => {\r\n                    let accessModifier = \"\";\r\n                    if (data.val()) {\r\n                        accessModifier = \"public\";\r\n                    } else accessModifier = \"private\";\r\n                    db.ref(`playlist/${accessModifier}/${props.match.params.playlistID}/playlistComment`).push({\r\n                        UID: UID,\r\n                        commentDetail: commentDetail,\r\n                    })\r\n                    alert(\"Bình luận thành công\")\r\n                })\r\n            } else alert(\"Vui lòng nhập nội dung bình luận\")\r\n\r\n        } else alert(\"Vui lòng đăng nhập để bình luận\")\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <VideoStream videoID={props.match.params.videoID} nextVideo={nextVideo} func={(params) => func(params)} playlistID={props.match.params.playlistID} ></VideoStream>\r\n                    <p className=\"videoplayer-video-title\">{videoTitle}</p>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n                        <p className=\"videoplayer-video-title\">{playlistTitle}<br />Quantity: 1/n</p>\r\n                        {getVideo()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"button-group col-8\">\r\n                <hr style={{ backgroundColor: \"white\" }} />\r\n                <h2>Bình luận:</h2>\r\n                <div style={{ flexWrap: \"wrap\", display: \"flex\", height: \"45px\" }}>\r\n                    <input type=\"text\" onChange={(event) => isChange(event)} className=\"form-control col\" placeholder=\"Bình luận công khai ....\" aria-describedby=\"helpId\" style={{ height: \"auto\", fontSize: \"20px\" }} />\r\n                    <button onClick={() => pushComment()} className=\"col-2\" className=\"btn btn-info\">Bình luận:</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}