{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\withAuthorization.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport AuthUserContext from \"./AuthUserContext\";\nimport { firebase } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\nconst withAuthorization = authCondition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!authCondition(authUser)) {\n          //if the authorization fails, redirects to sign in page\n          // this.props.history.push(routes.LANDING);\n          window.location.replace(\"/\");\n        }\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(AuthUserContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, authUser => authUser ? /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        loggedUser: authUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      })) : null);\n    }\n\n  }\n\n  return withRouter(WithAuthorization); //using withRouter so we have access to history props\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/withAuthorization.js"],"names":["React","withRouter","AuthUserContext","firebase","routes","withAuthorization","authCondition","Component","WithAuthorization","componentDidMount","auth","onAuthStateChanged","authUser","window","location","replace","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,aAAa,IAAIC,SAAS,IAAI;AACtD,QAAMC,iBAAN,SAAgCR,KAAK,CAACO,SAAtC,CAAgD;AAC9CE,IAAAA,iBAAiB,GAAG;AAClBN,MAAAA,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCC,QAAQ,IAAI;AAC3C,YAAI,CAACN,aAAa,CAACM,QAAD,CAAlB,EAA8B;AAC5B;AACA;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB;AACD;AACF,OAND;AAOD;;AAEDC,IAAAA,MAAM,GAAG;AACP,0BACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGJ,QAAQ,IACPA,QAAQ,gBACN,oBAAC,SAAD,oBAAe,KAAKK,KAApB;AAA2B,QAAA,UAAU,EAAEL,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM,GAEJ,IALR,CADF;AAUD;;AAtB6C;;AAyBhD,SAAOX,UAAU,CAACO,iBAAD,CAAjB,CA1BsD,CA0BhB;AACvC,CA3BD;;AA6BA,eAAeH,iBAAf","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport AuthUserContext from \"./AuthUserContext\";\r\nimport { firebase } from \"../firebase\";\r\nimport * as routes from \"../constants/routes\";\r\n\r\nconst withAuthorization = authCondition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!authCondition(authUser)) {\r\n          //if the authorization fails, redirects to sign in page\r\n          // this.props.history.push(routes.LANDING);\r\n          window.location.replace(\"/\");\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {/* it either renders the passed component or not */}\r\n          {authUser =>\r\n            authUser ? (\r\n              <Component {...this.props} loggedUser={authUser} />\r\n            ) : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withRouter(WithAuthorization); //using withRouter so we have access to history props\r\n};\r\n\r\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}