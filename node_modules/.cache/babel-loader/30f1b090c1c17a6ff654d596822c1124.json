{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\EditMyPlaylist.js\";\nimport React, { useState, useEffect } from 'react';\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\nimport { db } from \"../firebase/firebase\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nconst UID = localStorage.getItem(\"UID\");\n\nfunction EditMyPlaylist(props) {\n  const [dataFromDB, setDataFromDB] = useState([]);\n  const [videoID, setVideoID] = useState(\"\");\n  const [thumbnailVideo, setThumbnailVideo] = useState(\"\");\n  const [item, setItem] = useState({});\n  const [firstVideo, setFirstVideo] = useState(\"\");\n  const [lastVideo, setLastVideo] = useState(\"\");\n  const [playlistDes, setPlaylistDes] = useState(\"\");\n  const [playlistTitle, setPlaylistTitle] = useState(\"\");\n  const [playlistID, setPlaylistID] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [titleVideo, setTitleVideo] = useState(\"\");\n  useEffect(() => {\n    const db2 = db.ref(`users/${UID}/playlistList/${props.match.params.id}`);\n    db2.on(\"value\", data => {\n      if (data.val()) {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\n        db1.on(\"value\", data1 => {\n          if (data1.val()) {\n            setFirstVideo(data1.val().firstVideo);\n            setLastVideo(data1.val().lastVideo);\n            setPlaylistID(data.val().playlistID);\n            setQuantity(data1.val().quantity);\n            setPlaylistDes(data1.val().playlistDes);\n            setPlaylistTitle(data1.val().playlistTitle);\n          }\n        });\n        const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\n        db3.on(\"value\", data => {\n          let array = [];\n          data.forEach(element => {\n            array.push({\n              key: element.key,\n              videoID: element.val().videoID,\n              videoTitle: element.val().videoTitle,\n              videoThumbnail: element.val().videoThumbnail\n            });\n          });\n          setDataFromDB([...array]);\n        });\n      }\n    });\n  }, []);\n\n  const getVideoID = (videoID, videoTitle) => {\n    setVideoID(videoID);\n    setVideoTitle(videoTitle);\n  };\n\n  const deleteVideo = videoID => {\n    db.ref(`users/${UID}/playlistList/${props.match.params.id}`).on(\"value\", data => {\n      if (data.val()) {\n        let accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        if (quantity == 1) alert(\"Vui lòng xóa playlist\");else {\n          if (videoID == firstVideo) {\n            console.log(\"first video\");\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/firstVideo`).set(data2.val().nextVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n                setFirstVideo(...data2.val().nextVideo);\n              }\n            });\n          } else if (videoID == lastVideo) {\n            console.log(\"last video\");\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n                setLastVideo(...data2.val().previousVideo);\n              }\n            });\n          }\n\n          if (videoID != firstVideo && videoID != lastVideo) {\n            console.log(\"normal video\");\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n              }\n            });\n          }\n\n          db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`).child(videoID).remove();\n          let quantity1 = quantity;\n          db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(quantity1 -= 1);\n        }\n      }\n    });\n  };\n\n  const getVideo = () => {\n    if (dataFromDB) {\n      return dataFromDB.map((value, key) => {\n        return /*#__PURE__*/React.createElement(EditMyPlaylistItem, {\n          deleteVideo: videoID => deleteVideo(videoID),\n          key: key,\n          playlistID: playlistID,\n          videoID: value.key,\n          videoTitle: value.videoTitle,\n          videoThumbnail: value.videoThumbnail,\n          videoID2: (videoID, videoTitle) => getVideoID(videoID, videoTitle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        });\n      });\n    }\n  };\n\n  const getThumbnail = id => {\n    let a = \"https://i.ytimg.com/vi/\";\n    let b = \"/hqdefault.jpg\";\n    setThumbnailVideo(a + id + b);\n  };\n\n  const getTitle = id => {\n    let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\n    getJSON(a, (err, data) => {\n      if (err === null && data !== null) setTitleVideo(data.items[0].snippet.title);else return err;\n    });\n  };\n\n  const getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n\n    xhr.onload = function () {\n      var status = xhr.status;\n\n      if (status === 200) {\n        callback(null, xhr.response);\n      } else {\n        callback(status, xhr.response);\n      }\n    };\n\n    xhr.send();\n  };\n\n  const getItem = idVideo => {\n    setTitleVideo(\"\");\n    setThumbnailVideo(\"\");\n    getThumbnail(idVideo);\n    getTitle(idVideo);\n    setVideoID(idVideo);\n  };\n\n  const addVideo = item => {\n    const db1 = db.ref(`users/${UID}/playlistList/${props.match.params.id}`);\n    db1.on(\"value\", data => {\n      if (data.val()) {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`);\n        db2.once(\"value\", data1 => {\n          if (!data1.val()) {\n            db2.set({\n              videoThumbnail: thumbnailVideo,\n              videoTitle: titleVideo,\n              nextVideo: firstVideo,\n              previousVideo: lastVideo\n            });\n            let quantity1 = quantity;\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(quantity1 += 1);\n            setLastVideo(videoID);\n          } else alert(\"Video đã có trong playlist\");\n        });\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${firstVideo}/previousVideo`).set(videoID);\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${lastVideo}/nextVideo`).set(videoID);\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(videoID);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid row edit-my-playlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"playlist-info\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \" \", playlistTitle), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"playlist-info\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, playlistDes), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"playlist-info\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, quantity, \" video\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"col-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    getItem: item => {\n      getItem(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\",\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SearchResult, {\n    thumbnailVideo: thumbnailVideo,\n    titleVideo: titleVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info\",\n    onClick: item => {\n      addVideo(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Add to Playlist\"), getVideo()));\n}\n\nexport default EditMyPlaylist;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/EditMyPlaylist.js"],"names":["React","useState","useEffect","EditMyPlaylistItem","db","SearchBar","SearchResult","UID","localStorage","getItem","EditMyPlaylist","props","dataFromDB","setDataFromDB","videoID","setVideoID","thumbnailVideo","setThumbnailVideo","item","setItem","firstVideo","setFirstVideo","lastVideo","setLastVideo","playlistDes","setPlaylistDes","playlistTitle","setPlaylistTitle","playlistID","setPlaylistID","quantity","setQuantity","videoTitle","setVideoTitle","titleVideo","setTitleVideo","db2","ref","match","params","id","on","data","val","accessModifier","playlistAM","db1","data1","db3","array","forEach","element","push","key","videoThumbnail","getVideoID","deleteVideo","alert","console","log","data2","set","nextVideo","previousVideo","child","remove","quantity1","getVideo","map","value","getThumbnail","a","b","getTitle","getJSON","err","items","snippet","title","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","idVideo","addVideo","once","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\r\nimport { db } from \"../firebase/firebase\"\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResult from \"./SearchResult\";\r\n\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\nfunction EditMyPlaylist(props) {\r\n    const [dataFromDB, setDataFromDB] = useState([]);\r\n    const [videoID, setVideoID] = useState(\"\");\r\n    const [thumbnailVideo, setThumbnailVideo] = useState(\"\");\r\n    const [item, setItem] = useState({});\r\n    const [firstVideo, setFirstVideo] = useState(\"\");\r\n    const [lastVideo, setLastVideo] = useState(\"\");\r\n    const [playlistDes, setPlaylistDes] = useState(\"\");\r\n    const [playlistTitle, setPlaylistTitle] = useState(\"\");\r\n    const [playlistID, setPlaylistID] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(\"\");\r\n    const [videoTitle,setVideoTitle]=useState(\"\");\r\n    const [titleVideo,setTitleVideo]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const db2 = db.ref(`users/${UID}/playlistList/${props.match.params.id}`);\r\n        db2.on(\"value\", data => {\r\n            if (data.val()) {\r\n                const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\r\n                db1.on(\"value\", data1 => {\r\n                    if (data1.val()) {\r\n                        setFirstVideo(data1.val().firstVideo);\r\n                        setLastVideo(data1.val().lastVideo);\r\n                        setPlaylistID(data.val().playlistID);\r\n                        setQuantity(data1.val().quantity);\r\n                        setPlaylistDes(data1.val().playlistDes);\r\n                        setPlaylistTitle(data1.val().playlistTitle);\r\n                    }\r\n                })\r\n                const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\r\n                db3.on(\"value\", data => {\r\n                    let array = [];\r\n                    data.forEach(element => {\r\n                        array.push({\r\n                            key: element.key,\r\n                            videoID: element.val().videoID,\r\n                            videoTitle: element.val().videoTitle,\r\n                            videoThumbnail: element.val().videoThumbnail,\r\n\r\n                        })\r\n                    })\r\n                    setDataFromDB([...array])\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const getVideoID = (videoID, videoTitle) => {\r\n        setVideoID(videoID);\r\n        setVideoTitle(videoTitle);\r\n    }\r\n\r\n    const deleteVideo = (videoID) => {\r\n        db.ref(`users/${UID}/playlistList/${props.match.params.id}`).on(\"value\", data => {\r\n            if (data.val()) {\r\n                let accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                if (quantity == 1) alert(\"Vui lòng xóa playlist\")\r\n                else {\r\n                    if (videoID == firstVideo) {\r\n                        console.log(\"first video\");\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                            if (data2.val()) {\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/firstVideo`).set(data2.val().nextVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                                setFirstVideo(...data2.val().nextVideo);\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                    else if (videoID == lastVideo) {\r\n                        console.log(\"last video\");\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                            if (data2.val()) {\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                                setLastVideo(...data2.val().previousVideo)\r\n                            }\r\n                        })\r\n                    }\r\n                    if(videoID != firstVideo && videoID != lastVideo) {\r\n                        console.log(\"normal video\");\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                            if (data2.val()) {\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                            }\r\n                        })\r\n                    }\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`).child(videoID).remove();\r\n                    let quantity1=quantity;\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(quantity1 -= 1)\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const getVideo = () => {\r\n        if (dataFromDB) {\r\n            return dataFromDB.map((value, key) => {\r\n                return (<EditMyPlaylistItem\r\n                    deleteVideo={(videoID) => deleteVideo(videoID)}\r\n                    key={key}\r\n                    playlistID={playlistID}\r\n                    videoID={value.key}\r\n                    videoTitle={value.videoTitle}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                    videoID2={(videoID, videoTitle) => getVideoID(videoID, videoTitle)}\r\n                />)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const getThumbnail = (id) => {\r\n        let a = \"https://i.ytimg.com/vi/\";\r\n        let b = \"/hqdefault.jpg\";\r\n        setThumbnailVideo(a + id + b);\r\n    }\r\n\r\n    const getTitle = (id) => {\r\n        let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\r\n        getJSON(a, (err, data) => {\r\n            if (err === null && data !== null) setTitleVideo(data.items[0].snippet.title)\r\n            else return err;\r\n        })\r\n    }\r\n\r\n    const getJSON = function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status === 200) {\r\n                callback(null, xhr.response);\r\n            } else {\r\n                callback(status, xhr.response);\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    const getItem = (idVideo) => {\r\n        setTitleVideo(\"\");\r\n        setThumbnailVideo(\"\");\r\n        getThumbnail(idVideo);\r\n        getTitle(idVideo);\r\n        setVideoID(idVideo);\r\n    }\r\n\r\n    const addVideo = (item) => {\r\n        const db1 = db.ref(`users/${UID}/playlistList/${props.match.params.id}`);\r\n        db1.on(\"value\", data => {\r\n            if (data.val()) {\r\n                const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`);\r\n                db2.once(\"value\", data1 => {\r\n                    if (!data1.val()) {\r\n                        db2.set({\r\n                            videoThumbnail: thumbnailVideo,\r\n                            videoTitle: titleVideo,\r\n                            nextVideo: firstVideo,\r\n                            previousVideo: lastVideo,\r\n                        })\r\n                        let quantity1 = quantity\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(quantity1 += 1);\r\n                        setLastVideo(videoID);\r\n                    } else alert(\"Video đã có trong playlist\")\r\n                })\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${firstVideo}/previousVideo`).set(videoID);\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${lastVideo}/nextVideo`).set(videoID);\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(videoID);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid row edit-my-playlist\">\r\n            <div className=\"col-5\">\r\n                <h1 className=\"playlist-info\" style={{ color: \"white\" }}> {playlistTitle}</h1>\r\n                <h1 className=\"playlist-info\" style={{ color: \"white\" }}>{playlistDes}</h1>\r\n                <h1 className=\"playlist-info\" style={{ color: \"white\" }}>{quantity} video</h1>\r\n            </div>\r\n            <form className=\"col-7\">\r\n                <div className=\"mt-2 mb-3\" >\r\n                    <SearchBar getItem={(item) => { getItem(item) }} />\r\n                    <div style={{ color: \"white\", fontSize: \"20px\" }}>\r\n                        <SearchResult thumbnailVideo={thumbnailVideo} titleVideo={titleVideo} />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-info\" onClick={(item) => { addVideo(item) }}>Add to Playlist</button>\r\n                {getVideo()}\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditMyPlaylist;"]},"metadata":{},"sourceType":"module"}