{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\Landing.js\";\nimport React, { Component } from 'react';\nimport { db } from \"../firebase/firebase\";\nimport MyPlaylistTable from './MyPlaylistTable';\nimport landdingTable from './landdingTable';\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      if (this.state.dataFromDB) {\n        db.ref(`users/${element.UID}/playlistList/${element.playlistID}`).on(\"value\", data => {\n          return /*#__PURE__*/React.createElement(\"landdingTable\", {\n            playlistTitle: data.val().playlistTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 18\n            }\n          });\n        });\n      } // if(this.state.dataFromDB){\n      //   return this.state.dataFromDB.map((value, key) => {\n      //     return <MyPlaylistTable\n      //       key ={key}\n      //     />\n      //   } )\n      // }\n\n    };\n\n    this.state = {\n      dataFromDB: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    db.ref('playlist').on(\"value\", data => {\n      let array = [];\n      data.forEach(element => {\n        array.push({\n          UID: element.val().UID,\n          playlistID: element.val().playlistID\n        });\n      });\n      this.setState({\n        dataFromDB: array\n      });\n      console.log(this.state.dataFromDB); // array.forEach(element => {\n      //   this.setState({\n      //   })\n      // })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/Landing.js"],"names":["React","Component","db","MyPlaylistTable","landdingTable","LandingPage","constructor","props","getData","state","dataFromDB","ref","element","UID","playlistID","on","data","val","playlistTitle","UNSAFE_componentWillMount","array","forEach","push","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAAC,UAAMA,KAAN;;AAAD,SA0BlBC,OA1BkB,GA0BP,MAAM;AACf,UAAG,KAAKC,KAAL,CAAWC,UAAd,EAAyB;AACvBR,QAAAA,EAAE,CAACS,GAAH,CAAQ,SAAQC,OAAO,CAACC,GAAI,iBAAgBD,OAAO,CAACE,UAAW,EAA/D,EAAkEC,EAAlE,CAAqE,OAArE,EAA8EC,IAAI,IAAI;AAClF,8BAAO;AAAe,YAAA,aAAa,EAAEA,IAAI,CAACC,GAAL,GAAWC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFH;AAGD,OALc,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAxCiB;;AAChB,SAAKT,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAG;AADJ,KAAX;AAEE;;AACJS,EAAAA,yBAAyB,GAAG;AAC1BjB,IAAAA,EAAE,CAACS,GAAH,CAAO,UAAP,EAAmBI,EAAnB,CAAsB,OAAtB,EAA+BC,IAAI,IAAI;AACrC,UAAII,KAAK,GAAE,EAAX;AACAJ,MAAAA,IAAI,CAACK,OAAL,CAAaT,OAAO,IAAI;AACtBQ,QAAAA,KAAK,CAACE,IAAN,CAAW;AACTT,UAAAA,GAAG,EAAGD,OAAO,CAACK,GAAR,GAAcJ,GADX;AAETC,UAAAA,UAAU,EAAEF,OAAO,CAACK,GAAR,GAAcH;AAFjB,SAAX;AAID,OALD;AAMA,WAAKS,QAAL,CAAc;AACZb,QAAAA,UAAU,EAAEU;AADA,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,UAAvB,EAXqC,CAYrC;AACA;AAEA;AAEA;AAED,KAnBD;AAoBD;;AAgBDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAID;;AA/CiC;;AAkDpC,eAAerB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { db } from \"../firebase/firebase\"\r\nimport MyPlaylistTable from './MyPlaylistTable';\r\nimport landdingTable from './landdingTable';\r\n\r\nclass LandingPage extends Component {\r\n  constructor(props){super(props);\r\n    this.state={\r\n      dataFromDB : []\r\n    }}\r\n  UNSAFE_componentWillMount() {\r\n    db.ref('playlist').on(\"value\", data => {\r\n      let array =[];\r\n      data.forEach(element => {\r\n        array.push({\r\n          UID : element.val().UID,\r\n          playlistID: element.val().playlistID,\r\n        })\r\n      });\r\n      this.setState({\r\n        dataFromDB: array\r\n      });\r\n      console.log(this.state.dataFromDB);\r\n      // array.forEach(element => {\r\n      //   this.setState({\r\n          \r\n      //   })\r\n\r\n      // })\r\n      \r\n    })\r\n  }\r\n  getData  = () => {\r\n    if(this.state.dataFromDB){\r\n      db.ref(`users/${element.UID}/playlistList/${element.playlistID}`).on(\"value\", data => {\r\n          return <landdingTable playlistTitle={data.val().playlistTitle}/>\r\n        })\r\n    }\r\n    \r\n    // if(this.state.dataFromDB){\r\n    //   return this.state.dataFromDB.map((value, key) => {\r\n    //     return <MyPlaylistTable\r\n    //       key ={key}\r\n    //     />\r\n    //   } )\r\n    // }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}