{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\MyPlaylist.js\";\nimport React, { Component } from 'react';\nimport MyPlaylistTable from './MyPlaylistTable';\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nimport { db } from \"../firebase/firebase\";\nconst UID = localStorage.getItem(\"UID\");\n\nclass MyPlaylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getThumbnail = id => {\n      let a = \"https://i.ytimg.com/vi/\";\n      let b = \"/hqdefault.jpg\";\n      this.setState({\n        thumbnailVideo: a + id + b\n      });\n    };\n\n    this.getTitle = id => {\n      let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\n      this.getJSON(a, (err, data) => {\n        if (err === null && data !== null) {\n          this.setState({\n            titleVideo: data.items[0].snippet.title\n          });\n        } else return err;\n      });\n    };\n\n    this.getJSON = function (url, callback) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'json';\n\n      xhr.onload = function () {\n        var status = xhr.status;\n\n        if (status === 200) {\n          callback(null, xhr.response);\n        } else {\n          callback(status, xhr.response);\n        }\n      };\n\n      xhr.send();\n    };\n\n    this.getItem = idVideo => {\n      this.setState({\n        titleVideo: \"\",\n        thumbnailVideo: \"\"\n      });\n      this.getThumbnail(idVideo);\n      this.getTitle(idVideo);\n      this.setState({\n        videoID: idVideo\n      });\n    };\n\n    this.createPlaylist = item => {\n      const db1 = db.ref(`users/${UID}/playlistList`);\n      item.playlistAM = this.state.playlistAM;\n      item.playlistDes = this.state.playlistDes;\n      item.playlistTitle = this.state.playlistTitle;\n      item.firstVideo = this.state.videoID;\n      item.lastVideo = this.state.videoID;\n\n      if (this.state.playlistAM && this.state.playlistDes && this.state.playlistTitle && this.state.videoID) {\n        let str1 = db1.push(item).getKey();\n        const db2 = db.ref(`users/${UID}/playlistList/${str1}/playlistVideo/${this.state.videoID}`);\n        db2.set({\n          videoThumbnail: this.state.thumbnailVideo,\n          videoTitle: this.state.titleVideo,\n          nextVideo: this.state.videoID,\n          previousVideo: this.state.videoID\n        });\n\n        if (this.state.playlistAM == 1) {\n          db.ref(`playlist/${UID}`).push({\n            playlistID: str1\n          });\n        }\n      } else alert(\"Please fill all field\");\n    };\n\n    this.getData = () => {\n      if (this.state.dataFromDB) {\n        return this.state.dataFromDB.map((value, key) => {\n          return /*#__PURE__*/React.createElement(MyPlaylistTable, {\n            key: key,\n            idDB: value.key,\n            id: key,\n            playlistTitle: value.playlistTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }\n          });\n        });\n      }\n    };\n\n    this.state = {\n      playlistTitle: \"\",\n      playlistDes: \"\",\n      playlistAM: \"\",\n      videoID: \"\",\n      idVideo: '',\n      thumbnailVideo: '',\n      titleVideo: '',\n      item: {},\n      dataFromDB: []\n    };\n  }\n\n  isChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n    const db1 = db.ref(`users/${UID}/playlistList`);\n    db1.on(\"value\", data => {\n      var array = [];\n      data.forEach(element => {\n        array.push({\n          key: element.key,\n          playlistTitle: element.val().playlistTitle\n        });\n      });\n      this.setState({\n        dataFromDB: array\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, this.getData())), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col-4 border text-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, \"T\\u1EA1o Playlist\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, \"T\\xEAn Playlist\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"playlistTitle\",\n      onChange: event => this.isChange(event),\n      className: \"form-control mb-4\",\n      placeholder: \"T\\xEAn Playlist ... \",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, \"M\\xF4 t\\u1EA3 Playlist\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"playlistDes\",\n      onChange: event => this.isChange(event),\n      className: \"form-control mb-4\",\n      placeholder: \"M\\xF4 t\\u1EA3 Playlist ... \",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, \"Ph\\xE2n quy\\u1EC1n\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"playlistAM\",\n      className: \"form-control mb-4\",\n      onChange: event => this.isChange(event),\n      defaultValue: \"L\\u1EF1a ch\\u1ECDn ph\\xE2n quy\\u1EC1n\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, \"L\\u1EF1a ch\\u1ECDn ph\\xE2n quy\\u1EC1n\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, \"C\\xF4ng khai\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \"B\\xED m\\u1EADt\"))), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, \"Link video \"), /*#__PURE__*/React.createElement(SearchBar, {\n      getItem: item => {\n        this.getItem(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SearchResult, {\n      thumbnailVideo: this.state.thumbnailVideo,\n      titleVideo: this.state.titleVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"reset\",\n      onClick: item => this.createPlaylist(this.state.item),\n      className: \"btn btn-primary btn-lg btn-block \",\n      value: \"Th\\xEAm Playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default MyPlaylist;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/MyPlaylist.js"],"names":["React","Component","MyPlaylistTable","SearchBar","SearchResult","db","UID","localStorage","getItem","MyPlaylist","constructor","props","getThumbnail","id","a","b","setState","thumbnailVideo","getTitle","getJSON","err","data","titleVideo","items","snippet","title","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","idVideo","videoID","createPlaylist","item","db1","ref","playlistAM","state","playlistDes","playlistTitle","firstVideo","lastVideo","str1","push","getKey","db2","set","videoThumbnail","videoTitle","nextVideo","previousVideo","playlistID","alert","getData","dataFromDB","map","value","key","isChange","event","name","target","UNSAFE_componentWillMount","on","array","forEach","element","val","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MyPlaylistTable from './MyPlaylistTable';\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport { db } from \"../firebase/firebase\"\r\n\r\nconst UID = localStorage.getItem(\"UID\");\r\n\r\n\r\nclass MyPlaylist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playlistTitle: \"\",\r\n            playlistDes: \"\",\r\n            playlistAM: \"\",\r\n            videoID: \"\",\r\n            idVideo: '',\r\n            thumbnailVideo: '',\r\n            titleVideo: '',\r\n            item: {},\r\n            dataFromDB: []\r\n        }\r\n    }\r\n\r\n    isChange(event) {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    getThumbnail = (id) => {\r\n        let a = \"https://i.ytimg.com/vi/\";\r\n        let b = \"/hqdefault.jpg\";\r\n        this.setState({\r\n            thumbnailVideo: a + id + b\r\n        });\r\n    }\r\n\r\n    getTitle = (id) => {\r\n        let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\r\n        this.getJSON(a, (err, data) => {\r\n            if (err === null && data !== null) {\r\n                this.setState({\r\n                    titleVideo: data.items[0].snippet.title\r\n                });\r\n            }\r\n            else return err;\r\n        })\r\n    }\r\n\r\n    getJSON = function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status === 200) {\r\n                callback(null, xhr.response);\r\n            } else {\r\n                callback(status, xhr.response);\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    getItem = (idVideo) => {\r\n        this.setState({\r\n            titleVideo: \"\",\r\n            thumbnailVideo: \"\"\r\n        });\r\n        this.getThumbnail(idVideo);\r\n        this.getTitle(idVideo);\r\n        this.setState({\r\n            videoID: idVideo\r\n        });\r\n    }\r\n\r\n    createPlaylist = (item) => {\r\n        const db1 = db.ref(`users/${UID}/playlistList`)\r\n        item.playlistAM = this.state.playlistAM;\r\n        item.playlistDes = this.state.playlistDes;\r\n        item.playlistTitle = this.state.playlistTitle;\r\n        item.firstVideo = this.state.videoID;\r\n        item.lastVideo = this.state.videoID;\r\n        if (this.state.playlistAM && this.state.playlistDes && this.state.playlistTitle && this.state.videoID) {\r\n            let str1 = db1.push(item).getKey();\r\n            const db2 = db.ref(`users/${UID}/playlistList/${str1}/playlistVideo/${this.state.videoID}`);\r\n            db2.set({\r\n                videoThumbnail: this.state.thumbnailVideo,\r\n                videoTitle: this.state.titleVideo,\r\n                nextVideo: this.state.videoID,\r\n                previousVideo: this.state.videoID,\r\n            })\r\n            if(this.state.playlistAM == 1){\r\n                db.ref(`playlist/${UID}`).push({\r\n                    playlistID: str1\r\n                })\r\n            }\r\n        }else alert(\"Please fill all field\");\r\n\r\n\r\n\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const db1 = db.ref(`users/${UID}/playlistList`);\r\n        db1.on(\"value\", data => {\r\n            var array = [];\r\n            data.forEach(element => {\r\n                array.push({\r\n                    key: element.key,\r\n                    playlistTitle: element.val().playlistTitle,\r\n                })\r\n            })\r\n            this.setState({\r\n                dataFromDB: array\r\n            });\r\n        })\r\n    }\r\n\r\n    getData = () => {\r\n        if (this.state.dataFromDB) {\r\n            return this.state.dataFromDB.map((value, key) => {\r\n                return (\r\n                    <MyPlaylistTable\r\n                        key={key}\r\n                        idDB= {value.key}\r\n                        id = {key}\r\n                        playlistTitle={value.playlistTitle}\r\n                    ></MyPlaylistTable>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <div className=\"row\">\r\n                            {this.getData()}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <form className=\"col-4 border text-center \">\r\n                        <h3>Tạo Playlist</h3>\r\n                        <div className=\"form-group \">\r\n                            <label for=\"\">Tên Playlist</label>\r\n                            <input type=\"text\" name=\"playlistTitle\" onChange={(event) => this.isChange(event)} className=\"form-control mb-4\" placeholder=\"Tên Playlist ... \" required />\r\n                            <label for=\"\">Mô tả Playlist</label>\r\n                            <input type=\"text\" name=\"playlistDes\" onChange={(event) => this.isChange(event)} className=\"form-control mb-4\" placeholder=\"Mô tả Playlist ... \" required />\r\n                            <div className=\"form-group\">\r\n                                <label for=\"\">Phân quyền</label>\r\n                                <select name=\"playlistAM\" className=\"form-control mb-4\" onChange={(event) => this.isChange(event)} defaultValue=\"Lựa chọn phân quyền\">\r\n                                    <option>Lựa chọn phân quyền</option>\r\n                                    <option value={1}>Công khai</option>\r\n                                    <option value={0}>Bí mật</option>\r\n                                </select>\r\n                            </div>\r\n                            <label for=\"\">Link video </label>\r\n                            <SearchBar getItem={(item) => { this.getItem(item) }} />\r\n                            <SearchResult thumbnailVideo={this.state.thumbnailVideo} titleVideo={this.state.titleVideo} />\r\n                            <input type=\"reset\" onClick={(item) => this.createPlaylist(this.state.item)} className=\"btn btn-primary btn-lg btn-block \" value=\"Thêm Playlist\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPlaylist;"]},"metadata":{},"sourceType":"module"}