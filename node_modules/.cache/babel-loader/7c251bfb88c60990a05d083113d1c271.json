{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoPlayer.js\";\nimport React, { Component } from 'react';\nimport { db } from \"../firebase/firebase\";\nimport PlaylistItem from './MyPlaylistItem';\nimport VideoStream from './VideoStream';\n\nclass VideoPlayer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVideo = () => {\n      if (this.state.dataFromDB) {\n        return this.state.dataFromDB.map((value, key) => {\n          return /*#__PURE__*/React.createElement(PlaylistItem, {\n            key: key,\n            videoID: value.videoID,\n            videoThumbnail: value.videoThumbnail,\n            videoTitle: value.videoTitle,\n            playlistID: this.props.match.params.playlistID,\n            nextVideo: value.nextVideo,\n            videoID2: (videoID, nextVideo) => this.getVideoID(videoID, nextVideo),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 24\n            }\n          });\n        });\n      }\n    };\n\n    this.getVideoID = (videoID, nextVideo) => {\n      this.setState({\n        videoID: videoID,\n        nextVideo: nextVideo\n      });\n    };\n\n    this.func = params => {\n      this.setState({\n        videoID: params\n      });\n    };\n\n    this.state = {\n      dataFromDB: [],\n      nextVideo: \"\",\n      videoID: \"\"\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    if (db.ref(`playlist/public/${this.props.match.params.playlistID}`).on(\"value\", data => data.val())) {\n      const db2 = db.ref(`playlist//public/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`);\n      db2.on(\"value\", data => this.setState({\n        videoID: this.props.match.params.videoID,\n        nextVideo: data.val()\n      }));\n      const db1 = db.ref(`playlist//public/${this.props.match.params.playlistID}/playlistVideo`);\n      db1.on(\"value\", data => {\n        let array = [];\n        data.forEach(element => {\n          array.push({\n            videoID: element.key,\n            videoTitle: element.val().videoTitle,\n            videoThumbnail: element.val().videoThumbnail,\n            nextVideo: element.val().nextVideo\n          });\n        });\n        console.log(array);\n        this.setState({\n          dataFromDB: array\n        });\n      });\n    } else {\n      const db2 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`);\n      db2.on(\"value\", data => this.setState({\n        videoID: this.props.match.params.videoID,\n        nextVideo: data.val()\n      }));\n      const db1 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo`);\n      db1.on(\"value\", data => {\n        let array = [];\n        data.forEach(element => {\n          array.push({\n            videoID: element.key,\n            videoTitle: element.val().videoTitle,\n            videoThumbnail: element.val().videoThumbnail,\n            nextVideo: element.val().nextVideo\n          });\n        });\n        console.log(array);\n        this.setState({\n          dataFromDB: array\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoStream, {\n      videoID: this.state.videoID,\n      nextVideo: this.state.nextVideo,\n      func: params => this.func(params),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      style: {\n        height: \"430px\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, this.getVideo()))));\n  }\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoPlayer.js"],"names":["React","Component","db","PlaylistItem","VideoStream","VideoPlayer","constructor","props","getVideo","state","dataFromDB","map","value","key","videoID","videoThumbnail","videoTitle","match","params","playlistID","nextVideo","getVideoID","setState","func","UNSAFE_componentWillMount","ref","on","data","val","db2","db1","array","forEach","element","push","console","log","render","height","overflowY","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { db } from \"../firebase/firebase\"\r\nimport PlaylistItem from './MyPlaylistItem';\r\nimport VideoStream from './VideoStream';\r\n\r\nclass VideoPlayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromDB: [],\r\n            nextVideo: \"\",\r\n            videoID: \"\"\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        if(db.ref(`playlist/public/${this.props.match.params.playlistID}`).on(\"value\", data => data.val())){\r\n            const db2 = db.ref(`playlist//public/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`)\r\n        db2.on(\"value\", data => this.setState({\r\n            videoID: this.props.match.params.videoID,\r\n            nextVideo : data.val()\r\n        }))\r\n        const db1 = db.ref(`playlist//public/${this.props.match.params.playlistID}/playlistVideo`)\r\n        db1.on(\"value\", data => {\r\n            let array = [];\r\n            data.forEach(element => {\r\n                array.push({\r\n                    videoID: element.key,\r\n                    videoTitle: element.val().videoTitle,\r\n                    videoThumbnail: element.val().videoThumbnail,\r\n                    nextVideo: element.val().nextVideo,\r\n                })\r\n            })\r\n            console.log(array);\r\n            this.setState({\r\n                dataFromDB: array\r\n            });\r\n        })\r\n        }else{\r\n            const db2 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`)\r\n        db2.on(\"value\", data => this.setState({\r\n            videoID: this.props.match.params.videoID,\r\n            nextVideo : data.val()\r\n        }))\r\n        const db1 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo`)\r\n        db1.on(\"value\", data => {\r\n            let array = [];\r\n            data.forEach(element => {\r\n                array.push({\r\n                    videoID: element.key,\r\n                    videoTitle: element.val().videoTitle,\r\n                    videoThumbnail: element.val().videoThumbnail,\r\n                    nextVideo: element.val().nextVideo,\r\n                })\r\n            })\r\n            console.log(array);\r\n            this.setState({\r\n                dataFromDB: array\r\n            });\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    getVideo = () => {\r\n        if (this.state.dataFromDB) {\r\n            return this.state.dataFromDB.map((value, key) => {\r\n                return <PlaylistItem\r\n                    \r\n                    key={key}\r\n                    videoID={value.videoID}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                    videoTitle={value.videoTitle}\r\n                    playlistID={this.props.match.params.playlistID}\r\n                    nextVideo={value.nextVideo}\r\n                    videoID2 = {(videoID,nextVideo)=>this.getVideoID(videoID,nextVideo)}\r\n                />\r\n            })\r\n        }\r\n    }\r\n\r\n    getVideoID  = (videoID, nextVideo) => {\r\n        this.setState({\r\n            videoID: videoID,\r\n            nextVideo: nextVideo\r\n        });\r\n    }\r\n\r\n    func=(params) => {\r\n        this.setState({\r\n           videoID: params\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">\r\n                        <VideoStream videoID= {this.state.videoID} nextVideo={this.state.nextVideo} func={(params)=>this.func(params)}></VideoStream>\r\n                    </div>\r\n                    <div className=\"col-5\">\r\n                        <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n                            {this.getVideo()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}