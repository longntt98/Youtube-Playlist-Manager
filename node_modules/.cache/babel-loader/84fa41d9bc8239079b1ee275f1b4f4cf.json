{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\EditMyPlaylist.js\";\nimport React, { useState, useEffect } from 'react';\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\nimport { db } from \"../firebase/firebase\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nconst UID = localStorage.getItem(\"UID\");\n\nfunction EditMyPlaylist(props) {\n  const [dataFromDB, setDataFromDB] = useState([]);\n  const [videoID, setVideoID] = useState(\"\");\n  const [thumbnailVideo, setThumbnailVideo] = useState(\"\");\n  const [item, setItem] = useState({});\n  const [firstVideo, setFirstVideo] = useState(\"\");\n  const [lastVideo, setLastVideo] = useState(\"\");\n  const [playlistDes, setPlaylistDes] = useState(\"\");\n  const [playlistTitle, setPlaylistTitle] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  useEffect(() => {\n    const db2 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\n    db2.on(\"value\", data => {\n      if (data.val()) {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\n        db1.on(\"value\", data1 => {\n          if (data1.val()) {\n            this.setState({\n              firstVideo: data1.val().firstVideo,\n              lastVideo: data1.val().lastVideo,\n              playlistID: data.val().playlistID,\n              quantity: data.val().quantity,\n              playlistDes: data1.val().playlistDes,\n              playlistTitle: data1.val().playlistTitle\n            });\n          }\n        });\n        const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\n        db3.on(\"value\", data => {\n          let array = [];\n          data.forEach(element => {\n            array.push({\n              key: element.key,\n              videoID: element.val().videoID,\n              videoTitle: element.val().videoTitle,\n              videoThumbnail: element.val().videoThumbnail\n            });\n          });\n          this.setState({\n            dataFromDB: [...array]\n          });\n        });\n      }\n    });\n  }, []);\n\n  const getVideoID = (videoID, videoTitle) => {\n    this.setState({\n      videoID: videoID,\n      videoTitle: videoTitle\n    });\n  };\n\n  const deleteVideo = videoID => {\n    db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`).on(\"value\", data => {\n      if (data.val()) {\n        let accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        if (this.state.quantity == 1) alert(\"Vui lòng xóa playlist\");else {\n          if (videoID == this.state.firstVideo) {\n            console.log(\"first video\");\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/firstVideo`).set(data2.val().nextVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n                this.setState({\n                  firstVideo: data2.val().nextVideo\n                });\n              }\n            });\n          } else if (videoID == this.state.lastVideo) {\n            console.log(\"last video\");\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n                this.setState({\n                  lastVideo: data2.val().previousVideo\n                });\n              }\n            });\n          } else {\n            console.log(\"normal video\");\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n              }\n            });\n          }\n\n          db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`).child(videoID).remove();\n          db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity -= 1);\n        }\n      }\n    });\n  };\n\n  const getVideo = () => {\n    if (this.state.dataFromDB) {\n      return this.state.dataFromDB.map((value, key) => {\n        return /*#__PURE__*/React.createElement(EditMyPlaylistItem, {\n          deleteVideo: videoID => this.deleteVideo(videoID),\n          key: key,\n          playlistID: this.state.playlistID,\n          videoID: value.key,\n          videoTitle: value.videoTitle,\n          videoThumbnail: value.videoThumbnail,\n          videoID2: (videoID, videoTitle) => this.getVideoID(videoID, videoTitle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }\n        });\n      });\n    }\n  };\n\n  const getThumbnail = id => {\n    let a = \"https://i.ytimg.com/vi/\";\n    let b = \"/hqdefault.jpg\";\n    this.setState({\n      thumbnailVideo: a + id + b\n    });\n  };\n\n  const getTitle = id => {\n    let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\n    this.getJSON(a, (err, data) => {\n      if (err === null && data !== null) {\n        this.setState({\n          titleVideo: data.items[0].snippet.title\n        });\n      } else return err;\n    });\n  };\n\n  const getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n\n    xhr.onload = function () {\n      var status = xhr.status;\n\n      if (status === 200) {\n        callback(null, xhr.response);\n      } else {\n        callback(status, xhr.response);\n      }\n    };\n\n    xhr.send();\n  };\n\n  const getItem = idVideo => {\n    this.setState({\n      titleVideo: \"\",\n      thumbnailVideo: \"\"\n    });\n    this.getThumbnail(idVideo);\n    this.getTitle(idVideo);\n    this.setState({\n      videoID: idVideo\n    });\n  };\n\n  const addVideo = item => {\n    const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\n    db1.on(\"value\", data => {\n      if (data.val()) {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.videoID}`);\n        db2.once(\"value\", data1 => {\n          if (!data1.val()) {\n            db2.set({\n              videoThumbnail: this.state.thumbnailVideo,\n              videoTitle: this.state.titleVideo,\n              nextVideo: this.state.firstVideo,\n              previousVideo: this.state.lastVideo\n            });\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity += 1);\n            this.setState({\n              lastVideo: this.state.videoID\n            });\n          } else alert(\"Video đã có trong playlist\");\n        });\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.firstVideo}/previousVideo`).set(this.state.videoID);\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.lastVideo}/nextVideo`).set(this.state.videoID);\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(this.state.videoID);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid row edit-my-playlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"playlist-info\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \" \", this.state.playlistTitle), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"playlist-info\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, this.state.playlistDes), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"playlist-info\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, this.state.quantity, \" video\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"col-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    getItem: item => {\n      this.getItem(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\",\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SearchResult, {\n    thumbnailVideo: this.state.thumbnailVideo,\n    titleVideo: this.state.titleVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info\",\n    onClick: item => {\n      this.addVideo(this.state.item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"Add to Playlist\"), this.getVideo()));\n}\n\nexport default EditMyPlaylist;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/EditMyPlaylist.js"],"names":["React","useState","useEffect","EditMyPlaylistItem","db","SearchBar","SearchResult","UID","localStorage","getItem","EditMyPlaylist","props","dataFromDB","setDataFromDB","videoID","setVideoID","thumbnailVideo","setThumbnailVideo","item","setItem","firstVideo","setFirstVideo","lastVideo","setLastVideo","playlistDes","setPlaylistDes","playlistTitle","setPlaylistTitle","quantity","setQuantity","db2","ref","match","params","id","on","data","val","accessModifier","playlistAM","db1","playlistID","data1","setState","db3","array","forEach","element","push","key","videoTitle","videoThumbnail","getVideoID","deleteVideo","state","alert","console","log","data2","set","nextVideo","previousVideo","child","remove","getVideo","map","value","getThumbnail","a","b","getTitle","getJSON","err","titleVideo","items","snippet","title","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","idVideo","addVideo","once","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\r\nimport { db } from \"../firebase/firebase\"\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResult from \"./SearchResult\";\r\n\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\nfunction EditMyPlaylist(props) {\r\n    const [dataFromDB, setDataFromDB] = useState([]);\r\n    const [videoID, setVideoID] = useState(\"\");\r\n    const [thumbnailVideo, setThumbnailVideo] = useState(\"\");\r\n    const [item, setItem] = useState({});\r\n    const [firstVideo, setFirstVideo] = useState(\"\");\r\n    const [lastVideo, setLastVideo] = useState(\"\");\r\n    const [playlistDes, setPlaylistDes] = useState(\"\");\r\n    const [playlistTitle, setPlaylistTitle] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const db2 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\r\n        db2.on(\"value\", data => {\r\n            if (data.val()) {\r\n                const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\r\n                db1.on(\"value\", data1 => {\r\n                    if (data1.val()) {\r\n                        this.setState({\r\n                            firstVideo: data1.val().firstVideo,\r\n                            lastVideo: data1.val().lastVideo,\r\n                            playlistID: data.val().playlistID,\r\n                            quantity: data.val().quantity,\r\n                            playlistDes: data1.val().playlistDes,\r\n                            playlistTitle: data1.val().playlistTitle,\r\n                        });\r\n\r\n                    }\r\n                })\r\n                const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\r\n                db3.on(\"value\", data => {\r\n                    let array = [];\r\n                    data.forEach(element => {\r\n                        array.push({\r\n                            key: element.key,\r\n                            videoID: element.val().videoID,\r\n                            videoTitle: element.val().videoTitle,\r\n                            videoThumbnail: element.val().videoThumbnail,\r\n\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        dataFromDB: [...array]\r\n                    });\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n    const getVideoID = (videoID, videoTitle) => {\r\n        this.setState({\r\n            videoID: videoID,\r\n            videoTitle: videoTitle\r\n        });\r\n    }\r\n\r\n    const deleteVideo = (videoID) => {\r\n        db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`).on(\"value\", data => {\r\n            if (data.val()) {\r\n                let accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                if (this.state.quantity == 1) alert(\"Vui lòng xóa playlist\")\r\n                else {\r\n                    if (videoID == this.state.firstVideo) {\r\n                        console.log(\"first video\");\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                            if (data2.val()) {\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/firstVideo`).set(data2.val().nextVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                                this.setState({ firstVideo: data2.val().nextVideo });\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                    else if (videoID == this.state.lastVideo) {\r\n                        console.log(\"last video\");\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                            if (data2.val()) {\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                                this.setState({ lastVideo: data2.val().previousVideo });\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log(\"normal video\");\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                            if (data2.val()) {\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                            }\r\n                        })\r\n                    }\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`).child(videoID).remove();\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity -= 1)\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const getVideo = () => {\r\n        if (this.state.dataFromDB) {\r\n            return this.state.dataFromDB.map((value, key) => {\r\n                return (<EditMyPlaylistItem\r\n                    deleteVideo={(videoID) => this.deleteVideo(videoID)}\r\n                    key={key}\r\n                    playlistID={this.state.playlistID}\r\n                    videoID={value.key}\r\n                    videoTitle={value.videoTitle}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                    videoID2={(videoID, videoTitle) => this.getVideoID(videoID, videoTitle)}\r\n                />)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const getThumbnail = (id) => {\r\n        let a = \"https://i.ytimg.com/vi/\";\r\n        let b = \"/hqdefault.jpg\";\r\n        this.setState({\r\n            thumbnailVideo: a + id + b\r\n        });\r\n    }\r\n\r\n    const getTitle = (id) => {\r\n        let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\r\n        this.getJSON(a, (err, data) => {\r\n            if (err === null && data !== null) {\r\n                this.setState({\r\n                    titleVideo: data.items[0].snippet.title\r\n                });\r\n            }\r\n            else return err;\r\n        })\r\n    }\r\n\r\n    const getJSON = function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status === 200) {\r\n                callback(null, xhr.response);\r\n            } else {\r\n                callback(status, xhr.response);\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    const getItem = (idVideo) => {\r\n        this.setState({\r\n            titleVideo: \"\",\r\n            thumbnailVideo: \"\"\r\n        });\r\n        this.getThumbnail(idVideo);\r\n        this.getTitle(idVideo);\r\n        this.setState({\r\n            videoID: idVideo\r\n        });\r\n    }\r\n\r\n    const addVideo = (item) => {\r\n        const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\r\n        db1.on(\"value\", data => {\r\n            if (data.val()) {\r\n                const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.videoID}`);\r\n                db2.once(\"value\", data1 => {\r\n                    if (!data1.val()) {\r\n                        db2.set({\r\n                            videoThumbnail: this.state.thumbnailVideo,\r\n                            videoTitle: this.state.titleVideo,\r\n                            nextVideo: this.state.firstVideo,\r\n                            previousVideo: this.state.lastVideo,\r\n                        })\r\n                        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity += 1);\r\n                        this.setState({ lastVideo: this.state.videoID });\r\n                    } else alert(\"Video đã có trong playlist\")\r\n                })\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.firstVideo}/previousVideo`).set(this.state.videoID);\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.lastVideo}/nextVideo`).set(this.state.videoID);\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(this.state.videoID);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid row edit-my-playlist\">\r\n            <div className=\"col-5\">\r\n                <h1 className=\"playlist-info\" style={{ color: \"white\" }}> {this.state.playlistTitle}</h1>\r\n                <h1 className=\"playlist-info\" style={{ color: \"white\" }}>{this.state.playlistDes}</h1>\r\n                <h1 className=\"playlist-info\" style={{ color: \"white\" }}>{this.state.quantity} video</h1>\r\n            </div>\r\n            <form className=\"col-7\">\r\n                <div className=\"mt-2 mb-3\" >\r\n                    <SearchBar getItem={(item) => { this.getItem(item) }} />\r\n                    <div style={{ color: \"white\", fontSize: \"20px\" }}>\r\n                        <SearchResult thumbnailVideo={this.state.thumbnailVideo} titleVideo={this.state.titleVideo} />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-info\" onClick={(item) => { this.addVideo(this.state.item) }}>Add to Playlist</button>\r\n                {this.getVideo()}\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditMyPlaylist;"]},"metadata":{},"sourceType":"module"}