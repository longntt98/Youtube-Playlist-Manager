{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\EditMyPlaylist.js\";\nimport React, { Component } from 'react';\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\nimport { db } from \"../firebase/firebase\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nconst UID = localStorage.getItem(\"UID\");\n\nclass EditMyPlaylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVideoID = (videoID, videoTitle) => {\n      this.setState({\n        videoID: videoID,\n        videoTitle: videoTitle\n      });\n    };\n\n    this.deleteVideo = videoID => {\n      db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`).on(\"value\", data => {\n        if (data.val()) {\n          let accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n\n          if (videoID == this.state.firstVideo) {\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/firstVideo`).set(data2.val().nextVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n                this.setState({\n                  firstVideo: [...data2.val().nextVideo]\n                });\n              }\n            });\n          } else if (videoID == this.state.lastVideo) {\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n                this.setState({\n                  lastVideo: data2.val().previousVideo\n                });\n              }\n            });\n          } else {\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\n              if (data2.val()) {\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\n              }\n            });\n          }\n\n          db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`).child(videoID).remove();\n          db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity -= 1);\n        }\n      });\n    };\n\n    this.getVideo = () => {\n      if (this.state.dataFromDB) {\n        return this.state.dataFromDB.map((value, key) => {\n          return /*#__PURE__*/React.createElement(EditMyPlaylistItem, {\n            deleteVideo: videoID => this.deleteVideo(videoID),\n            key: key,\n            playlistID: this.state.playlistID,\n            videoID: value.key,\n            videoTitle: value.videoTitle,\n            videoThumbnail: value.videoThumbnail,\n            videoID2: (videoID, videoTitle) => this.getVideoID(videoID, videoTitle),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }\n          });\n        });\n      }\n    };\n\n    this.getThumbnail = id => {\n      let a = \"https://i.ytimg.com/vi/\";\n      let b = \"/hqdefault.jpg\";\n      this.setState({\n        thumbnailVideo: a + id + b\n      });\n    };\n\n    this.getTitle = id => {\n      let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\n      this.getJSON(a, (err, data) => {\n        if (err === null && data !== null) {\n          this.setState({\n            titleVideo: data.items[0].snippet.title\n          });\n        } else return err;\n      });\n    };\n\n    this.getJSON = function (url, callback) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'json';\n\n      xhr.onload = function () {\n        var status = xhr.status;\n\n        if (status === 200) {\n          callback(null, xhr.response);\n        } else {\n          callback(status, xhr.response);\n        }\n      };\n\n      xhr.send();\n    };\n\n    this.getItem = idVideo => {\n      this.setState({\n        titleVideo: \"\",\n        thumbnailVideo: \"\"\n      });\n      this.getThumbnail(idVideo);\n      this.getTitle(idVideo);\n      this.setState({\n        videoID: idVideo\n      });\n    };\n\n    this.addVideo = item => {\n      const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\n      db1.on(\"value\", data => {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.videoID}`);\n        db2.once(\"value\", data1 => {\n          if (!data1.val()) {\n            db2.set({\n              videoThumbnail: this.state.thumbnailVideo,\n              videoTitle: this.state.titleVideo,\n              nextVideo: this.state.firstVideo,\n              previousVideo: this.state.lastVideo\n            });\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity += 1);\n            this.setState({\n              lastVideo: this.state.videoID\n            });\n          } else alert(\"Video đã có trong playlist\");\n        });\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.firstVideo}/previousVideo`).set(this.state.videoID);\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.lastVideo}/nextVideo`).set(this.state.videoID);\n        db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(this.state.videoID);\n      });\n    };\n\n    this.state = {\n      dataFromDB: [],\n      videoID: \"\",\n      thumbnailVideo: '',\n      titleVideo: '',\n      item: {},\n      firstVideo: \"\",\n      lastVideo: \"\",\n      playlistDes: \"\",\n      playlistTitle: \"\",\n      quantity: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const db2 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\n    db2.on(\"value\", data => {\n      if (data.val()) {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\n        db1.on(\"value\", data1 => {\n          if (data1.val()) {\n            this.setState({\n              firstVideo: data1.val().firstVideo,\n              lastVideo: data1.val().lastVideo,\n              playlistID: data.val().playlistID,\n              quantity: data.val().quantity,\n              playlistDes: data1.val().playlistDes,\n              playlistTitle: data1.val().playlistTitle,\n              quantity: data1.val().quantity\n            });\n          }\n        });\n        const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\n        db3.on(\"value\", data => {\n          let array = [];\n          data.forEach(element => {\n            array.push({\n              key: element.key,\n              videoID: element.val().videoID,\n              videoTitle: element.val().videoTitle,\n              videoThumbnail: element.val().videoThumbnail\n            });\n          });\n          this.setState({\n            dataFromDB: [...array]\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid row edit-my-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"playlist-info\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \" \", this.state.playlistTitle), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"playlist-info\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, this.state.playlistDes), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"playlist-info\",\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, this.state.quantity, \" video\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      getItem: item => {\n        this.getItem(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"white\",\n        fontSize: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SearchResult, {\n      thumbnailVideo: this.state.thumbnailVideo,\n      titleVideo: this.state.titleVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info\",\n      onClick: item => {\n        this.addVideo(this.state.item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, \"Add to Playlist\"), this.getVideo()));\n  }\n\n}\n\nexport default EditMyPlaylist;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/EditMyPlaylist.js"],"names":["React","Component","EditMyPlaylistItem","db","SearchBar","SearchResult","UID","localStorage","getItem","EditMyPlaylist","constructor","props","getVideoID","videoID","videoTitle","setState","deleteVideo","ref","match","params","id","on","data","val","accessModifier","playlistAM","state","firstVideo","playlistID","data2","set","nextVideo","previousVideo","lastVideo","child","remove","quantity","getVideo","dataFromDB","map","value","key","videoThumbnail","getThumbnail","a","b","thumbnailVideo","getTitle","getJSON","err","titleVideo","items","snippet","title","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","idVideo","addVideo","item","db1","db2","once","data1","alert","playlistDes","playlistTitle","componentDidMount","db3","array","forEach","element","push","render","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\r\nimport { db } from \"../firebase/firebase\"\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResult from \"./SearchResult\";\r\n\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\nclass EditMyPlaylist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromDB: [],\r\n            videoID: \"\",\r\n            thumbnailVideo: '',\r\n            titleVideo: '',\r\n            item: {},\r\n            firstVideo: \"\",\r\n            lastVideo: \"\",\r\n            playlistDes: \"\",\r\n            playlistTitle: \"\",\r\n            quantity: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const db2 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\r\n        db2.on(\"value\", data => {\r\n            if (data.val()) {\r\n                const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\r\n                db1.on(\"value\", data1 => {\r\n                    if (data1.val()) {\r\n                        this.setState({\r\n                            firstVideo: data1.val().firstVideo,\r\n                            lastVideo: data1.val().lastVideo,\r\n                            playlistID: data.val().playlistID,\r\n                            quantity: data.val().quantity,\r\n                            playlistDes: data1.val().playlistDes,\r\n                            playlistTitle: data1.val().playlistTitle,\r\n                            quantity: data1.val().quantity,\r\n                        });\r\n\r\n                    }\r\n                })\r\n                const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\r\n                db3.on(\"value\", data => {\r\n                    let array = [];\r\n                    data.forEach(element => {\r\n                        array.push({\r\n                            key: element.key,\r\n                            videoID: element.val().videoID,\r\n                            videoTitle: element.val().videoTitle,\r\n                            videoThumbnail: element.val().videoThumbnail,\r\n\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        dataFromDB: [...array]\r\n                    });\r\n                })\r\n            }\r\n        })\r\n    }\r\n    getVideoID = (videoID, videoTitle) => {\r\n        this.setState({\r\n            videoID: videoID,\r\n            videoTitle: videoTitle\r\n        });\r\n    }\r\n\r\n    deleteVideo = (videoID) => {\r\n        db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`).on(\"value\", data => {\r\n            if (data.val()) {\r\n                let accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                if (videoID == this.state.firstVideo) {\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                        if (data2.val()) {\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/firstVideo`).set(data2.val().nextVideo);\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                            this.setState({ firstVideo: [...data2.val().nextVideo] });\r\n                        }\r\n                    })\r\n\r\n                }\r\n                else if (videoID == this.state.lastVideo) {\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                        if (data2.val()) {\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(data2.val().previousVideo);\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                            this.setState({ lastVideo: data2.val().previousVideo });\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${videoID}`).on(\"value\", data2 => {\r\n                        if (data2.val()) {\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().nextVideo}/previousVideo`).set(data2.val().previousVideo);\r\n                            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${data2.val().previousVideo}/nextVideo`).set(data2.val().nextVideo);\r\n                        }\r\n                    })\r\n                }\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`).child(videoID).remove();\r\n                db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity -=1)\r\n            }\r\n        });\r\n    }\r\n\r\n    getVideo = () => {\r\n        if (this.state.dataFromDB) {\r\n            return this.state.dataFromDB.map((value, key) => {\r\n                return (<EditMyPlaylistItem\r\n                    deleteVideo={(videoID) => this.deleteVideo(videoID)}\r\n                    key={key}\r\n                    playlistID={this.state.playlistID}\r\n                    videoID={value.key}\r\n                    videoTitle={value.videoTitle}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                    videoID2={(videoID, videoTitle) => this.getVideoID(videoID, videoTitle)}\r\n                />)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getThumbnail = (id) => {\r\n        let a = \"https://i.ytimg.com/vi/\";\r\n        let b = \"/hqdefault.jpg\";\r\n        this.setState({\r\n            thumbnailVideo: a + id + b\r\n        });\r\n    }\r\n\r\n    getTitle = (id) => {\r\n        let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\r\n        this.getJSON(a, (err, data) => {\r\n            if (err === null && data !== null) {\r\n                this.setState({\r\n                    titleVideo: data.items[0].snippet.title\r\n                });\r\n            }\r\n            else return err;\r\n        })\r\n    }\r\n\r\n    getJSON = function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status === 200) {\r\n                callback(null, xhr.response);\r\n            } else {\r\n                callback(status, xhr.response);\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    getItem = (idVideo) => {\r\n        this.setState({\r\n            titleVideo: \"\",\r\n            thumbnailVideo: \"\"\r\n        });\r\n        this.getThumbnail(idVideo);\r\n        this.getTitle(idVideo);\r\n        this.setState({\r\n            videoID: idVideo\r\n        });\r\n    }\r\n\r\n    addVideo = (item) => {\r\n        const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\r\n        db1.on(\"value\", data => {\r\n            const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n            const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.videoID}`);\r\n            db2.once(\"value\", data1 => {\r\n                if (!data1.val()) {\r\n                    db2.set({\r\n                        videoThumbnail: this.state.thumbnailVideo,\r\n                        videoTitle: this.state.titleVideo,\r\n                        nextVideo: this.state.firstVideo,\r\n                        previousVideo: this.state.lastVideo,\r\n                    })\r\n                    db.ref(`playlist/${accessModifier}/${data.val().playlistID}/quantity`).set(this.state.quantity += 1);\r\n                    this.setState({ lastVideo: this.state.videoID });\r\n                } else alert(\"Video đã có trong playlist\")\r\n            })\r\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.firstVideo}/previousVideo`).set(this.state.videoID);\r\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.lastVideo}/nextVideo`).set(this.state.videoID);\r\n            db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`).set(this.state.videoID);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid row edit-my-playlist\">\r\n                <div className=\"col-5\">\r\n                    <h1 className=\"playlist-info\" style={{ color: \"white\" }}> {this.state.playlistTitle}</h1>\r\n                    <h1 className=\"playlist-info\" style={{ color: \"white\" }}>{this.state.playlistDes}</h1>\r\n                    <h1 className=\"playlist-info\" style={{ color: \"white\" }}>{this.state.quantity} video</h1>\r\n                </div>\r\n                <form className=\"col-7\">\r\n                    <div className=\"mt-2 mb-3\" >\r\n                        <SearchBar getItem={(item) => { this.getItem(item) }} />\r\n                        <div style={{ color: \"white\", fontSize: \"20px\" }}>\r\n                            <SearchResult thumbnailVideo={this.state.thumbnailVideo} titleVideo={this.state.titleVideo} />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-info\" onClick={(item) => { this.addVideo(this.state.item) }}>Add to Playlist</button>\r\n                    {this.getVideo()}\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditMyPlaylist;"]},"metadata":{},"sourceType":"module"}