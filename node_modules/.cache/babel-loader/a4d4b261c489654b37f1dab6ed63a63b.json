{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\LandingTable.js\";\nimport React, { Component } from 'react';\nimport MyPlaylistItem from './MyPlaylistItem';\nimport { db } from \"../firebase/firebase\";\n\nclass LandingTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVideoID = (videoID, nextVideo) => {\n      this.setState({\n        videoID: videoID,\n        nextVideo: nextVideo\n      });\n    };\n\n    this.state = {\n      videoData: [],\n      nextVideo: \"\",\n      videoID: \"\",\n      videoThumbnail: \"\",\n      videoTitle: \"\"\n    };\n  }\n\n  deletePlaylist() {\n    let db1 = db.ref(`users/${this.props.UID}/playlistList`);\n    console.log(this.props.idDB);\n    db1.child(this.props.idDB).remove();\n  }\n\n  componentDidMount() {\n    // const db1 = db.ref(`playlist/public/${this.props.idDB}/playlistVideo`);\n    // let array = []\n    // db1.on(\"value\", data => {\n    //     if (data.val()) {\n    //         data.forEach(element => {\n    //             array.push({\n    //                 key: element.key,\n    //                 videoTitle: element.val().videoTitle,\n    //                 videoThumbnail: element.val().videoThumbnail\n    //             })\n    //         })\n    //         this.setState({\n    //             videoData: array\n    //         });\n    //     }\n    // })\n    db.ref(`playlist/public/${this.props.idDB}/firstVideo`).once(\"value\", data => {\n      db.ref(`playlist/public/${this.props.idDB}/playlistVideo/${data.val()}`).once(\"value\", data1 => {\n        if (data1.val()) {\n          this.setState({\n            videoThumbnail: data1.val().videoThumbnail,\n            videoTitle: data1.val().videoTitle\n          });\n        }\n      });\n    });\n  } // getVideo = () => {\n  //     if (this.state.videoData) {\n  //         return this.state.videoData.map((value, key) => {\n  //             return <MyPlaylistItem\n  //                 key={key}\n  //                 playlistID={this.props.idDB}\n  //                 videoID={value.key}\n  //                 videoTitle={value.videoTitle}\n  //                 videoThumbnail={value.videoThumbnail}\n  //                 videoID2={(videoID, nextVideo) => this.getVideoID(videoID, nextVideo)}\n  //             />\n  //         })\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      style: {\n        color: \"white\",\n        fontSize: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }\n    }, \"Playlist - \", this.props.playlistTitle)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\",\n        fontSize: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }\n    }, this.props.quantity, \" video\"))));\n  }\n\n}\n\nexport default LandingTable;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/LandingTable.js"],"names":["React","Component","MyPlaylistItem","db","LandingTable","constructor","props","getVideoID","videoID","nextVideo","setState","state","videoData","videoThumbnail","videoTitle","deletePlaylist","db1","ref","UID","console","log","idDB","child","remove","componentDidMount","once","data","val","data1","render","color","fontSize","playlistTitle","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,EAAT,QAAmB,sBAAnB;;AAGA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA8DnBC,UA9DmB,GA8DN,CAACC,OAAD,EAAUC,SAAV,KAAwB;AACjC,WAAKC,QAAL,CAAc;AACVF,QAAAA,OAAO,EAAEA,OADC;AAEVC,QAAAA,SAAS,EAAEA;AAFD,OAAd;AAIH,KAnEkB;;AAEf,SAAKE,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETH,MAAAA,SAAS,EAAE,EAFF;AAGTD,MAAAA,OAAO,EAAE,EAHA;AAITK,MAAAA,cAAc,EAAE,EAJP;AAKTC,MAAAA,UAAU,EAAE;AALH,KAAb;AAOH;;AAEDC,EAAAA,cAAc,GAAG;AACb,QAAIC,GAAG,GAAGb,EAAE,CAACc,GAAH,CAAQ,SAAQ,KAAKX,KAAL,CAAWY,GAAI,eAA/B,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWe,IAAvB;AACAL,IAAAA,GAAG,CAACM,KAAJ,CAAU,KAAKhB,KAAL,CAAWe,IAArB,EAA2BE,MAA3B;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEArB,IAAAA,EAAE,CAACc,GAAH,CAAQ,mBAAkB,KAAKX,KAAL,CAAWe,IAAK,aAA1C,EAAwDI,IAAxD,CAA6D,OAA7D,EAAsEC,IAAI,IAAG;AACzEvB,MAAAA,EAAE,CAACc,GAAH,CAAQ,mBAAkB,KAAKX,KAAL,CAAWe,IAAK,kBAAiBK,IAAI,CAACC,GAAL,EAAW,EAAtE,EAAyEF,IAAzE,CAA8E,OAA9E,EAAuFG,KAAK,IAAE;AAC1F,YAAGA,KAAK,CAACD,GAAN,EAAH,EAAe;AACX,eAAKjB,QAAL,CAAc;AACVG,YAAAA,cAAc,EAAEe,KAAK,CAACD,GAAN,GAAYd,cADlB;AAEVC,YAAAA,UAAU,EAAEc,KAAK,CAACD,GAAN,GAAYb;AAFd,WAAd;AAIH;AACJ,OAPD;AAQH,KATD;AAUH,GA9CgC,CAgDjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AASAe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiE,KAAKzB,KAAL,CAAW0B,aAA5E,CAAL,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAM;AAAG,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiD,KAAKzB,KAAL,CAAW2B,QAA5D,WAAN,CAHJ,CADJ,CADJ;AAWH;;AAlFgC;;AAqFrC,eAAe7B,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport MyPlaylistItem from './MyPlaylistItem';\r\nimport { db } from \"../firebase/firebase\"\r\n\r\n\r\nclass LandingTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoData: [],\r\n            nextVideo: \"\",\r\n            videoID: \"\",\r\n            videoThumbnail: \"\",\r\n            videoTitle: \"\",\r\n        }\r\n    }\r\n\r\n    deletePlaylist() {\r\n        let db1 = db.ref(`users/${this.props.UID}/playlistList`);\r\n        console.log(this.props.idDB);\r\n        db1.child(this.props.idDB).remove()\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const db1 = db.ref(`playlist/public/${this.props.idDB}/playlistVideo`);\r\n        // let array = []\r\n        // db1.on(\"value\", data => {\r\n        //     if (data.val()) {\r\n        //         data.forEach(element => {\r\n        //             array.push({\r\n        //                 key: element.key,\r\n        //                 videoTitle: element.val().videoTitle,\r\n        //                 videoThumbnail: element.val().videoThumbnail\r\n        //             })\r\n        //         })\r\n        //         this.setState({\r\n        //             videoData: array\r\n        //         });\r\n        //     }\r\n        // })\r\n\r\n        db.ref(`playlist/public/${this.props.idDB}/firstVideo`).once(\"value\", data =>{\r\n            db.ref(`playlist/public/${this.props.idDB}/playlistVideo/${data.val()}`).once(\"value\", data1=>{\r\n                if(data1.val()){\r\n                    this.setState({\r\n                        videoThumbnail: data1.val().videoThumbnail,\r\n                        videoTitle: data1.val().videoTitle,\r\n                    });\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // getVideo = () => {\r\n    //     if (this.state.videoData) {\r\n    //         return this.state.videoData.map((value, key) => {\r\n    //             return <MyPlaylistItem\r\n    //                 key={key}\r\n    //                 playlistID={this.props.idDB}\r\n    //                 videoID={value.key}\r\n    //                 videoTitle={value.videoTitle}\r\n    //                 videoThumbnail={value.videoThumbnail}\r\n    //                 videoID2={(videoID, nextVideo) => this.getVideoID(videoID, nextVideo)}\r\n    //             />\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    getVideoID = (videoID, nextVideo) => {\r\n        this.setState({\r\n            videoID: videoID,\r\n            nextVideo: nextVideo\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-4 \"  >\r\n                <div className=\"playlist-table\">\r\n                    {/* <ul className=\"list-group\" style={{ height: \"100%\", overflowY: \"auto\", overflowX: \"hidden\" }}>{this.getVideo()}</ul> */}\r\n                    <div><header style={{ color: \"white\", fontSize: \"20px\" }}>Playlist - {this.props.playlistTitle}</header></div>\r\n                    <div> <p style={{ color: \"white\", fontSize: \"20px\" }}>{this.props.quantity} video</p></div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingTable;"]},"metadata":{},"sourceType":"module"}