{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\MyPlaylist.js\";\nimport React, { useEffect, useState } from 'react';\nimport MyPlaylistTable from './MyPlaylistTable';\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nimport { db } from \"../firebase/firebase\";\nconst UID = localStorage.getItem(\"UID\");\n\nfunction MyPlaylist(props) {\n  const [playlistTitle, setPlaylistTitle] = useState(\"\");\n  const [playlistDes, setPlaylistDes] = useState(\"\");\n  const [playlistAM, setPlaylistAM] = useState(\"\");\n  const [videoID, setVideoID] = useState(\"\");\n  const [thumbnailVideo, setThumbnailVideo] = useState(\"\");\n  const [titleVideo, setTitleVideo] = useState(\"\");\n  const [item, setItem] = useState({});\n  const [dataFromDB, setDataFromDB] = useState([]);\n  useEffect(() => {\n    const db1 = db.ref(`users/${UID}/playlistList`);\n    db1.on(\"value\", data1 => {\n      if (data1.val()) {\n        let array = [];\n        data1.forEach(element => {\n          const accessModifier = element.val().playlistAM == 0 ? \"private\" : \"public\";\n          const db2 = db.ref(`playlist/${accessModifier}/${element.val().playlistID}`);\n          db2.once(\"value\", data2 => {\n            if (data2.val()) {\n              array.push({\n                playlistIDofUser: element.key,\n                key: data2.key,\n                playlistTitle: data2.val().playlistTitle,\n                accessModifier: accessModifier,\n                quantity: data2.val().quantity\n              });\n              setDataFromDB([...array]);\n            }\n          });\n        });\n      }\n    });\n  }, [dataFromDB]);\n\n  const isChange = event => {\n    let name = event.target.name;\n    console.log(name);\n\n    if (name == playlistTitle) {\n      setPlaylistTitle(event.target.value);\n      console.log(1);\n    } else if (name == playlistAM) {\n      setPlaylistAM(event.target.value);\n      console.log(2);\n    } else if (name == playlistDes) {\n      setPlaylistDes(event.target.value);\n      console.log(3);\n    }\n  };\n\n  const getThumbnail = id => {\n    let a = \"https://i.ytimg.com/vi/\";\n    let b = \"/hqdefault.jpg\";\n    setThumbnailVideo(a + id + b);\n  };\n\n  const getTitle = id => {\n    let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\n    getJSON(a, (err, data) => {\n      if (err === null && data !== null) setTitleVideo(data.items[0].snippet.title);else return err;\n    });\n  };\n\n  const getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n\n    xhr.onload = function () {\n      var status = xhr.status;\n      if (status === 200) callback(null, xhr.response);else callback(status, xhr.response);\n    };\n\n    xhr.send();\n  };\n\n  const getItem = idVideo => {\n    setTitleVideo(\"\");\n    setThumbnailVideo(\"\");\n    getThumbnail(idVideo);\n    getTitle(idVideo);\n    setVideoID(idVideo);\n  };\n\n  const createPlaylist = item => {\n    item.playlistDes = playlistDes;\n    item.playlistTitle = playlistTitle;\n    item.firstVideo = videoID;\n    item.lastVideo = videoID;\n    item.quantity = 1;\n    item.UID = UID;\n    let accessModifier = playlistAM == 0 ? \"private\" : \"public\";\n\n    if (playlistAM && playlistDes && playlistTitle && videoID) {\n      const db1 = db.ref(`playlist/${accessModifier}`);\n      let str1 = db1.push(item).getKey();\n      const db2 = db.ref(`playlist/${accessModifier}/${str1}/playlistVideo/${videoID}`);\n      db2.set({\n        videoThumbnail: thumbnailVideo,\n        videoTitle: titleVideo,\n        nextVideo: videoID,\n        previousVideo: videoID\n      });\n      const db3 = db.ref(`users/${UID}/playlistList`);\n      db3.push({\n        playlistID: str1,\n        playlistAM: playlistAM\n      }); // alert(\"Thêm mới thành công\")\n    } else alert(\"Vui lòng điền toàn bộ thông tin\");\n  };\n\n  const deletePlaylist = (playlistIDofUser, accessModifier, idDB) => {\n    db.ref(`users/${UID}/playlistList/`).child(playlistIDofUser).remove();\n    db.ref(`playlist/${accessModifier}/`).child(idDB).remove();\n    console.log(\"delete playlist\");\n  };\n\n  const getData = () => {\n    if (dataFromDB) {\n      return dataFromDB.map((value, key) => {\n        return /*#__PURE__*/React.createElement(MyPlaylistTable, {\n          playlistIDofUser: value.playlistIDofUser,\n          accessModifier: value.accessModifier,\n          key: key,\n          idDB: value.key,\n          playlistTitle: value.playlistTitle,\n          deletePlaylist: (playlistIDofUser, accessModifier, idDB) => deletePlaylist(playlistIDofUser, accessModifier, idDB),\n          quantity: value.quantity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, getData()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown button-add-playlist dropup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dropup-toggle fa fa-plus\",\n    type: \"button\",\n    id: \"dropdownMenuButton\",\n    style: {\n      color: \"#007bff\",\n      backgroundColor: \"transparent\",\n      border: \"none\"\n    },\n    \"data-toggle\": \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    style: {\n      width: \"350px\",\n      left: \"-295px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"text-center create-playlist-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"T\\u1EA1o Playlist\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, \"T\\xEAn Playlist\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"playlistTitle\",\n    onChange: event => isChange(event),\n    className: \"form-control mb-2\",\n    placeholder: \"T\\xEAn Playlist ... \",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, \"M\\xF4 t\\u1EA3 Playlist\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"playlistDes\",\n    onChange: event => isChange(event),\n    className: \"form-control mb-2\",\n    placeholder: \"M\\xF4 t\\u1EA3 Playlist ... \",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, \"Ph\\xE2n quy\\u1EC1n\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"playlistAM\",\n    className: \"form-control mb-2\",\n    onChange: event => isChange(event),\n    defaultValue: \"L\\u1EF1a ch\\u1ECDn ph\\xE2n quy\\u1EC1n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, \"L\\u1EF1a ch\\u1ECDn ph\\xE2n quy\\u1EC1n\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, \"C\\xF4ng khai\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }, \"B\\xED m\\u1EADt\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \"Link video \"), /*#__PURE__*/React.createElement(SearchBar, {\n    getItem: item => {\n      getItem(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(SearchResult, {\n    thumbnailVideo: thumbnailVideo,\n    titleVideo: titleVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: item => createPlaylist(item),\n    className: \"btn btn-primary btn-lg btn-block \",\n    value: \"Th\\xEAm Playlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nexport default MyPlaylist;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/MyPlaylist.js"],"names":["React","useEffect","useState","MyPlaylistTable","SearchBar","SearchResult","db","UID","localStorage","getItem","MyPlaylist","props","playlistTitle","setPlaylistTitle","playlistDes","setPlaylistDes","playlistAM","setPlaylistAM","videoID","setVideoID","thumbnailVideo","setThumbnailVideo","titleVideo","setTitleVideo","item","setItem","dataFromDB","setDataFromDB","db1","ref","on","data1","val","array","forEach","element","accessModifier","db2","playlistID","once","data2","push","playlistIDofUser","key","quantity","isChange","event","name","target","console","log","value","getThumbnail","id","a","b","getTitle","getJSON","err","data","items","snippet","title","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","idVideo","createPlaylist","firstVideo","lastVideo","str1","getKey","set","videoThumbnail","videoTitle","nextVideo","previousVideo","db3","alert","deletePlaylist","idDB","child","remove","getData","map","color","backgroundColor","border","width","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MyPlaylistTable from './MyPlaylistTable';\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport { db } from \"../firebase/firebase\"\r\n\r\nconst UID = localStorage.getItem(\"UID\");\r\n\r\n\r\nfunction MyPlaylist(props) {\r\n    const [playlistTitle, setPlaylistTitle] = useState(\"\");\r\n    const [playlistDes, setPlaylistDes] = useState(\"\");\r\n    const [playlistAM, setPlaylistAM] = useState(\"\");\r\n    const [videoID, setVideoID] = useState(\"\");\r\n    const [thumbnailVideo, setThumbnailVideo] = useState(\"\");\r\n    const [titleVideo, setTitleVideo] = useState(\"\");\r\n    const [item, setItem] = useState({});\r\n    const [dataFromDB, setDataFromDB] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const db1 = db.ref(`users/${UID}/playlistList`)\r\n        db1.on(\"value\", data1 => {\r\n            if (data1.val()) {\r\n                let array = [];\r\n                data1.forEach(element => {\r\n                    const accessModifier = (element.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                    const db2 = db.ref(`playlist/${accessModifier}/${element.val().playlistID}`);\r\n                    db2.once(\"value\", data2 => {\r\n                        if (data2.val()) {\r\n                            array.push({\r\n                                playlistIDofUser: element.key,\r\n                                key: data2.key,\r\n                                playlistTitle: data2.val().playlistTitle,\r\n                                accessModifier: accessModifier,\r\n                                quantity: data2.val().quantity,\r\n                            })\r\n                            setDataFromDB([...array]);\r\n                        }\r\n                    })\r\n\r\n                })\r\n            }\r\n        })\r\n    }, [dataFromDB])\r\n\r\n    const isChange = (event) => {\r\n        let name= event.target.name;console.log(name);\r\n        if(name == playlistTitle) {setPlaylistTitle(event.target.value);console.log(1);}\r\n        else if(name == playlistAM) {setPlaylistAM(event.target.value);console.log(2);}\r\n        else if (name == playlistDes) {setPlaylistDes(event.target.value);console.log(3);}\r\n    }\r\n\r\n    const getThumbnail = (id) => {\r\n        let a = \"https://i.ytimg.com/vi/\";\r\n        let b = \"/hqdefault.jpg\";\r\n        setThumbnailVideo(a + id + b)\r\n    }\r\n\r\n    const getTitle = (id) => {\r\n        let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\r\n        getJSON(a, (err, data) => {\r\n            if (err === null && data !== null) setTitleVideo(data.items[0].snippet.title);\r\n            else return err;\r\n        })\r\n    }\r\n\r\n    const getJSON = function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status === 200) callback(null, xhr.response);\r\n            else callback(status, xhr.response);\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    const getItem = (idVideo) => {\r\n        setTitleVideo(\"\");\r\n        setThumbnailVideo(\"\");\r\n        getThumbnail(idVideo);\r\n        getTitle(idVideo);\r\n        setVideoID(idVideo);\r\n    }\r\n\r\n    const createPlaylist = (item) => {\r\n        item.playlistDes = playlistDes;\r\n        item.playlistTitle = playlistTitle;\r\n        item.firstVideo = videoID;\r\n        item.lastVideo = videoID;\r\n        item.quantity = 1;\r\n        item.UID = UID\r\n        let accessModifier = (playlistAM == 0) ? \"private\" : \"public\";\r\n        if (playlistAM && playlistDes && playlistTitle && videoID) {\r\n            const db1 = db.ref(`playlist/${accessModifier}`)\r\n            let str1 = db1.push(item).getKey();\r\n            const db2 = db.ref(`playlist/${accessModifier}/${str1}/playlistVideo/${videoID}`);\r\n            db2.set({\r\n                videoThumbnail: thumbnailVideo,\r\n                videoTitle: titleVideo,\r\n                nextVideo: videoID,\r\n                previousVideo: videoID,\r\n            })\r\n            const db3 = db.ref(`users/${UID}/playlistList`);\r\n            db3.push({\r\n                playlistID: str1,\r\n                playlistAM: playlistAM,\r\n            })\r\n            // alert(\"Thêm mới thành công\")\r\n        } else alert(\"Vui lòng điền toàn bộ thông tin\");\r\n    }\r\n\r\n    const deletePlaylist = (playlistIDofUser, accessModifier, idDB) => {\r\n        db.ref(`users/${UID}/playlistList/`).child(playlistIDofUser).remove();\r\n        db.ref(`playlist/${accessModifier}/`).child(idDB).remove();\r\n        console.log(\"delete playlist\");\r\n    }\r\n\r\n    const getData = () => {\r\n        if (dataFromDB) {\r\n            return dataFromDB.map((value, key) => {\r\n                return (\r\n                    <MyPlaylistTable\r\n                        playlistIDofUser={value.playlistIDofUser}\r\n                        accessModifier={value.accessModifier}\r\n                        key={key}\r\n                        idDB={value.key}\r\n                        playlistTitle={value.playlistTitle}\r\n                        deletePlaylist={(playlistIDofUser, accessModifier, idDB) => deletePlaylist(playlistIDofUser, accessModifier, idDB)}\r\n                        quantity={value.quantity}\r\n                    ></MyPlaylistTable>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {getData()}\r\n            </div>\r\n            <div className=\"dropdown button-add-playlist dropup\">\r\n                <button className=\"dropup-toggle fa fa-plus\" type=\"button\" id=\"dropdownMenuButton\" style={{ color: \"#007bff\", backgroundColor: \"transparent\", border: \"none\" }} data-toggle=\"dropdown\" ></button>\r\n                <div className=\"dropdown-menu\" style={{ width: \"350px\", left: \"-295px\" }}>\r\n                    <form className=\"text-center create-playlist-table\">\r\n                        <h3>Tạo Playlist</h3>\r\n                        <div className=\"form-group \">\r\n                            <label>Tên Playlist</label>\r\n                            <input type=\"text\" name=\"playlistTitle\" onChange={(event) => isChange(event)} className=\"form-control mb-2\" placeholder=\"Tên Playlist ... \" required />\r\n                            <label>Mô tả Playlist</label>\r\n                            <input type=\"text\" name=\"playlistDes\" onChange={(event) => isChange(event)} className=\"form-control mb-2\" placeholder=\"Mô tả Playlist ... \" required />\r\n                            <div className=\"form-group\">\r\n                                <label>Phân quyền</label>\r\n                                <select name=\"playlistAM\" className=\"form-control mb-2\" onChange={(event) => isChange(event)} defaultValue=\"Lựa chọn phân quyền\">\r\n                                    <option>Lựa chọn phân quyền</option>\r\n                                    <option value={1}>Công khai</option>\r\n                                    <option value={0}>Bí mật</option>\r\n                                </select>\r\n                            </div>\r\n                            <label>Link video </label>\r\n                            <SearchBar getItem={(item) => { getItem(item) }} />\r\n                            <SearchResult thumbnailVideo={thumbnailVideo} titleVideo={titleVideo} />\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <input type=\"button\" onClick={(item) => createPlaylist(item)} className=\"btn btn-primary btn-lg btn-block \" value=\"Thêm Playlist\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPlaylist;"]},"metadata":{},"sourceType":"module"}