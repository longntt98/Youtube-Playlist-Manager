{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoPlayer.js\";\nimport React, { Component } from 'react';\nimport { db } from \"../firebase/firebase\";\nimport PlaylistItem from './MyPlaylistItem';\nimport VideoStream from './VideoStream';\n\nclass VideoPlayer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVideo = () => {\n      if (this.state.dataFromDB) {\n        return this.state.dataFromDB.map((value, key) => {\n          return /*#__PURE__*/React.createElement(PlaylistItem, {\n            key: key,\n            videoID: value.videoID,\n            videoThumbnail: value.videoThumbnail,\n            videoTitle: value.videoTitle,\n            playlistID: this.props.match.params.playlistID,\n            nextVideo: value.nextVideo,\n            videoID2: (videoID, nextVideo) => this.getVideoID(videoID, nextVideo),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 24\n            }\n          });\n        });\n      }\n    };\n\n    this.getVideoID = (videoID, nextVideo) => {\n      this.setState({\n        videoID: videoID,\n        nextVideo: nextVideo\n      });\n    };\n\n    this.func = params => {\n      this.setState({\n        videoID: params\n      });\n    };\n\n    this.state = {\n      dataFromDB: [],\n      nextVideo: \"\",\n      videoID: \"\"\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    db.ref(`playlist/public/${this.props.match.params.playlistID}`).on(\"value\", data => {\n      let accessModifier = \"\";\n\n      if (data.val()) {\n        accessModifier = \"public\";\n      } else accessModifier = \"private\";\n\n      const db2 = db.ref(`playlist/${accessModifier}/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`);\n      db2.on(\"value\", data => this.setState({\n        videoID: this.props.match.params.videoID,\n        nextVideo: data.val()\n      }));\n      const db1 = db.ref(`playlist/${accessModifier}/${this.props.match.params.playlistID}/playlistVideo`);\n      db1.on(\"value\", data => {\n        let array = [];\n        data.forEach(element => {\n          array.push({\n            videoID: element.key,\n            videoTitle: element.val().videoTitle,\n            videoThumbnail: element.val().videoThumbnail,\n            nextVideo: element.val().nextVideo\n          });\n        });\n        this.setState({\n          dataFromDB: array\n        });\n      });\n    }); //  if (db.ref(`playlist/private/${this.props.match.params.playlistID}`).on(\"value\", data => data.val())){\n    //     const db2 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`)\n    //     db2.on(\"value\", data => this.setState({\n    //         videoID: this.props.match.params.videoID,\n    //         nextVideo: data.val()\n    //     }))\n    //     const db1 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo`)\n    //     db1.on(\"value\", data => {\n    //         let array = [];\n    //         data.forEach(element => {\n    //             array.push({\n    //                 videoID: element.key,\n    //                 videoTitle: element.val().videoTitle,\n    //                 videoThumbnail: element.val().videoThumbnail,\n    //                 nextVideo: element.val().nextVideo,\n    //             })\n    //         })\n    //         this.setState({\n    //             dataFromDB: array\n    //         });\n    //     })\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoStream, {\n      videoID: this.state.videoID,\n      nextVideo: this.state.nextVideo,\n      func: params => this.func(params),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      style: {\n        height: \"430px\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, this.getVideo()))));\n  }\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoPlayer.js"],"names":["React","Component","db","PlaylistItem","VideoStream","VideoPlayer","constructor","props","getVideo","state","dataFromDB","map","value","key","videoID","videoThumbnail","videoTitle","match","params","playlistID","nextVideo","getVideoID","setState","func","UNSAFE_componentWillMount","ref","on","data","accessModifier","val","db2","db1","array","forEach","element","push","render","height","overflowY","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { db } from \"../firebase/firebase\"\r\nimport PlaylistItem from './MyPlaylistItem';\r\nimport VideoStream from './VideoStream';\r\n\r\nclass VideoPlayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromDB: [],\r\n            nextVideo: \"\",\r\n            videoID: \"\"\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        db.ref(`playlist/public/${this.props.match.params.playlistID}`).on(\"value\", data => {\r\n            let accessModifier = \"\";\r\n            if (data.val()) {\r\n                accessModifier = \"public\";\r\n            } else accessModifier = \"private\";\r\n            const db2 = db.ref(`playlist/${accessModifier}/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`)\r\n            db2.on(\"value\", data => this.setState({\r\n                videoID: this.props.match.params.videoID,\r\n                nextVideo: data.val()\r\n            }))\r\n            const db1 = db.ref(`playlist/${accessModifier}/${this.props.match.params.playlistID}/playlistVideo`)\r\n            db1.on(\"value\", data => {\r\n                let array = [];\r\n                data.forEach(element => {\r\n                    array.push({\r\n                        videoID: element.key,\r\n                        videoTitle: element.val().videoTitle,\r\n                        videoThumbnail: element.val().videoThumbnail,\r\n                        nextVideo: element.val().nextVideo,\r\n                    })\r\n                })\r\n                this.setState({\r\n                    dataFromDB: array\r\n                });\r\n            })\r\n\r\n        })\r\n        //  if (db.ref(`playlist/private/${this.props.match.params.playlistID}`).on(\"value\", data => data.val())){\r\n        //     const db2 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`)\r\n        //     db2.on(\"value\", data => this.setState({\r\n        //         videoID: this.props.match.params.videoID,\r\n        //         nextVideo: data.val()\r\n        //     }))\r\n        //     const db1 = db.ref(`playlist/private/${this.props.match.params.playlistID}/playlistVideo`)\r\n        //     db1.on(\"value\", data => {\r\n        //         let array = [];\r\n        //         data.forEach(element => {\r\n        //             array.push({\r\n        //                 videoID: element.key,\r\n        //                 videoTitle: element.val().videoTitle,\r\n        //                 videoThumbnail: element.val().videoThumbnail,\r\n        //                 nextVideo: element.val().nextVideo,\r\n        //             })\r\n        //         })\r\n        //         this.setState({\r\n        //             dataFromDB: array\r\n        //         });\r\n        //     })\r\n        // }\r\n\r\n    }\r\n\r\n    getVideo = () => {\r\n        if (this.state.dataFromDB) {\r\n            return this.state.dataFromDB.map((value, key) => {\r\n                return <PlaylistItem\r\n\r\n                    key={key}\r\n                    videoID={value.videoID}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                    videoTitle={value.videoTitle}\r\n                    playlistID={this.props.match.params.playlistID}\r\n                    nextVideo={value.nextVideo}\r\n                    videoID2={(videoID, nextVideo) => this.getVideoID(videoID, nextVideo)}\r\n                />\r\n            })\r\n        }\r\n    }\r\n\r\n    getVideoID = (videoID, nextVideo) => {\r\n        this.setState({\r\n            videoID: videoID,\r\n            nextVideo: nextVideo\r\n        });\r\n    }\r\n\r\n    func = (params) => {\r\n        this.setState({\r\n            videoID: params\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">\r\n                        <VideoStream videoID={this.state.videoID} nextVideo={this.state.nextVideo} func={(params) => this.func(params)}></VideoStream>\r\n                    </div>\r\n                    <div className=\"col-5\">\r\n                        <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n                            {this.getVideo()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}