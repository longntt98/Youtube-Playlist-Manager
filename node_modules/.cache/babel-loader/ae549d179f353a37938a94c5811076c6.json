{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoStream.js\";\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Redirect, Link } from 'react-router-dom';\n\nclass VideoStream extends Component {\n  constructor(props) {\n    super(props);\n\n    this.videoOnReady = event => {\n      event.target.playVideo();\n    };\n\n    this.videoStateChange = event => {\n      if (event.data === 0) {\n        console.log(\"abc\");\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/videoplayer\" + this.props.playlistID + \".\" + this.props.nextVideo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }\n        });\n      }\n    };\n\n    this.func = param => {\n      this.props.func(param);\n    };\n\n    this.state = {\n      videoID: \"\"\n    };\n  }\n\n  render() {\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        autoplay: 1,\n        vq: \"small\"\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(YouTube, {\n      videoId: this.props.videoID,\n      opts: opts,\n      onReady: this.videoStateChange,\n      onStateChange: this.videoStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default VideoStream;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoStream.js"],"names":["React","Component","YouTube","Redirect","Link","VideoStream","constructor","props","videoOnReady","event","target","playVideo","videoStateChange","data","console","log","playlistID","nextVideo","func","param","state","videoID","render","opts","height","width","playerVars","autoplay","vq"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,YARmB,GAQHC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACH,KAVkB;;AAAA,SAgBnBC,gBAhBmB,GAgBCH,KAAD,IAAW;AAC1B,UAAIA,KAAK,CAACI,IAAN,KAAe,CAAnB,EAAsB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,4BAAQ,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE,iBAAiB,KAAKR,KAAL,CAAWS,UAA5B,GAAyC,GAAzC,GAA+C,KAAKT,KAAL,CAAWU,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;AACJ,KArBkB;;AAAA,SA6BnBC,IA7BmB,GA6BVC,KAAD,IAAW;AACf,WAAKZ,KAAL,CAAWW,IAAX,CAAgBC,KAAhB;AACH,KA/BkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AA4BDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,CADF;AAERC,QAAAA,EAAE,EAAE;AAFI;AAHH,KAAb;AAQA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWc,OADxB;AAEI,MAAA,IAAI,EAAEE,IAFV;AAGI,MAAA,OAAO,EAAE,KAAKX,gBAHlB;AAII,MAAA,aAAa,EAAE,KAAKA,gBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AArD+B;;AAwDpC,eAAeP,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nclass VideoStream extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoID: \"\",\r\n        }\r\n    }\r\n\r\n\r\n    videoOnReady = (event) => {\r\n        event.target.playVideo();\r\n    }\r\n    // videoStateChange = (event) => {\r\n    //     if (event.data === 0) {\r\n    //         this.func(this.props.nextVideo)\r\n    //     }\r\n    // }\r\n    videoStateChange = (event) => {\r\n        if (event.data === 0) {\r\n            console.log(\"abc\");\r\n            return (<Redirect to={\"/videoplayer\" + this.props.playlistID + \".\" + this.props.nextVideo}/>)\r\n        }\r\n    }\r\n\r\n    // videoStateChange = (event) => {\r\n    //     if (event.data === 0) {\r\n    //         window.location.replace(`/videoplayer/${this.props.playlistID}.${this.props.nextVideo}`)\r\n    //     }\r\n    // }\r\n\r\n    func  = (param) => {\r\n        this.props.func(param)\r\n    }\r\n\r\n    render() {\r\n        const opts = {\r\n            height: '390',\r\n            width: '640',\r\n            playerVars: {\r\n                autoplay: 1,\r\n                vq: \"small\",\r\n            },\r\n        };\r\n        return (\r\n            <div>\r\n                <YouTube\r\n                    videoId={this.props.videoID}\r\n                    opts={opts}\r\n                    onReady={this.videoStateChange}\r\n                    onStateChange={this.videoStateChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoStream;"]},"metadata":{},"sourceType":"module"}