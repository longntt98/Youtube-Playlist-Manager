{"ast":null,"code":"import React, { Component } from 'react';\nimport { db } from \"../firebase/firebase\";\nimport PlaylistItem from './MyPlaylistItem';\nconst UID = localStorage.getItem(\"UID\");\n\nclass VideoPlayer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fisrtFunction = () => {\n      if (!window['YT']) {\n        var YT = {\n          loading: 0,\n          loaded: 0\n        };\n      }\n\n      if (!window['YTConfig']) {\n        var YTConfig = {\n          'host': 'http://www.youtube.com'\n        };\n      }\n\n      if (!YT.loading) {\n        YT.loading = 1;\n\n        (function () {\n          var l = [];\n\n          YT.ready = function (f) {\n            if (YT.loaded) {\n              f();\n            } else {\n              l.push(f);\n            }\n          };\n\n          window.onYTReady = function () {\n            YT.loaded = 1;\n\n            for (var i = 0; i < l.length; i++) {\n              try {\n                l[i]();\n              } catch (e) {}\n            }\n          };\n\n          YT.setConfig = function (c) {\n            for (var k in c) {\n              if (c.hasOwnProperty(k)) {\n                YTConfig[k] = c[k];\n              }\n            }\n          };\n\n          var a = document.createElement('script');\n          a.type = 'text/javascript';\n          a.id = 'www-widgetapi-script';\n          a.src = 'https://s.ytimg.com/yts/jsbin/www-widgetapi-vfl9HuaVj/www-widgetapi.js';\n          a.async = true;\n          var c = document.currentScript;\n\n          if (c) {\n            var n = c.nonce || c.getAttribute('nonce');\n\n            if (n) {\n              a.setAttribute('nonce', n);\n            }\n          }\n\n          var b = document.getElementsByTagName('script')[0];\n          b.parentNode.insertBefore(a, b);\n        })();\n      }\n    };\n  }\n\n  onYouTubePlayerAPIReady() {\n    var player;\n    player = new YT.Player('player', {\n      height: '390',\n      width: '640',\n      videoId: '0Bmhjf0rKe8',\n      events: {\n        'onReady': onPlayerReady,\n        'onStateChange': onPlayerStateChange\n      }\n    });\n  }\n\n  render() {\n    return 1;\n  } //     constructor(props){\n  //         super(props);\n  //         this.state={\n  //             dataFromDB : []\n  //         }}\n  //     getVideoURL = (id) => {\n  //         return \"https://www.youtube.com/embed/\" + id +\"?autoplay=1\";\n  //     }\n  //     UNSAFE_componentWillMount(){\n  //         const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo`)\n  //         db1.on(\"value\", data => {\n  //             let array= [];\n  //             data.forEach(element => {\n  //                 array.push({\n  //                     videoID : element.val().videoID,\n  //                     videoTitle: element.val().videoTitle,\n  //                     videoThumbnail: element.val().videoThumbnail\n  //                 })\n  //             })\n  //             this.setState({\n  //                 dataFromDB: array\n  //             });\n  //         })\n  //     }\n  //     getVideo  = () => {\n  //         if(this.state.dataFromDB){\n  //             return this.state.dataFromDB.map((value, key)=>{\n  //                 return <PlaylistItem\n  //                     key = {key}\n  //                     videoID = {value.videoID}\n  //                     videoThumbnail = {value.videoThumbnail}\n  //                     videoTitle = {value.videoTitle}\n  //                     playlistID = {this.props.match.params.playlistID}\n  //                 />\n  //             })\n  //         }\n  //     }\n  //     render() {\n  //         return (\n  //             <div className=\"container\">\n  //                 <div className=\"row\">\n  //                     <div className=\"col-7\">\n  //                     <iframe width={\"100%\"} height={\"100%\"} src={this.getVideoURL(this.props.match.params.videoID)} frameBorder=\"{0}\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\n  // </iframe>\n  //                     </div>\n  //                     <div className=\"col-5\">\n  //                         <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\n  //                             {this.getVideo()}\n  //                         </ul>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         );\n  //     }\n\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoPlayer.js"],"names":["React","Component","db","PlaylistItem","UID","localStorage","getItem","VideoPlayer","fisrtFunction","window","YT","loading","loaded","YTConfig","l","ready","f","push","onYTReady","i","length","e","setConfig","c","k","hasOwnProperty","a","document","createElement","type","id","src","async","currentScript","n","nonce","getAttribute","setAttribute","b","getElementsByTagName","parentNode","insertBefore","onYouTubePlayerAPIReady","player","Player","height","width","videoId","events","onPlayerReady","onPlayerStateChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {db} from \"../firebase/firebase\"\r\nimport PlaylistItem from './MyPlaylistItem';\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\n\r\nclass VideoPlayer extends Component {\r\n\r\n    fisrtFunction  = () => {\r\n        if (!window['YT']) {var YT = {loading: 0,loaded: 0};}if (!window['YTConfig']) {var YTConfig = {'host': 'http://www.youtube.com'};}if (!YT.loading) {YT.loading = 1;(function(){var l = [];YT.ready = function(f) {if (YT.loaded) {f();} else {l.push(f);}};window.onYTReady = function() {YT.loaded = 1;for (var i = 0; i < l.length; i++) {try {l[i]();} catch (e) {}}};YT.setConfig = function(c) {for (var k in c) {if (c.hasOwnProperty(k)) {YTConfig[k] = c[k];}}};var a = document.createElement('script');a.type = 'text/javascript';a.id = 'www-widgetapi-script';a.src = 'https://s.ytimg.com/yts/jsbin/www-widgetapi-vfl9HuaVj/www-widgetapi.js';a.async = true;var c = document.currentScript;if (c) {var n = c.nonce || c.getAttribute('nonce');if (n) {a.setAttribute('nonce', n);}}var b = document.getElementsByTagName('script')[0];b.parentNode.insertBefore(a, b);})();}\r\n    }\r\n\r\n    onYouTubePlayerAPIReady() {\r\n        var player;\r\n        player = new YT.Player('player', {\r\n          height: '390',\r\n          width: '640',\r\n          videoId: '0Bmhjf0rKe8',\r\n          events: {\r\n            'onReady': onPlayerReady,\r\n            'onStateChange': onPlayerStateChange\r\n          }\r\n        });\r\n    }\r\n    render(){\r\n        return 1;\r\n    }\r\n\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//             dataFromDB : []\r\n//         }}\r\n//     getVideoURL = (id) => {\r\n//         return \"https://www.youtube.com/embed/\" + id +\"?autoplay=1\";\r\n//     }\r\n\r\n//     UNSAFE_componentWillMount(){\r\n//         const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo`)\r\n//         db1.on(\"value\", data => {\r\n//             let array= [];\r\n//             data.forEach(element => {\r\n//                 array.push({\r\n//                     videoID : element.val().videoID,\r\n//                     videoTitle: element.val().videoTitle,\r\n//                     videoThumbnail: element.val().videoThumbnail\r\n//                 })\r\n//             })\r\n//             this.setState({\r\n//                 dataFromDB: array\r\n//             });\r\n//         })\r\n//     }\r\n\r\n//     getVideo  = () => {\r\n//         if(this.state.dataFromDB){\r\n//             return this.state.dataFromDB.map((value, key)=>{\r\n//                 return <PlaylistItem\r\n//                     key = {key}\r\n//                     videoID = {value.videoID}\r\n//                     videoThumbnail = {value.videoThumbnail}\r\n//                     videoTitle = {value.videoTitle}\r\n//                     playlistID = {this.props.match.params.playlistID}\r\n//                 />\r\n//             })\r\n//         }\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-7\">\r\n//                     <iframe width={\"100%\"} height={\"100%\"} src={this.getVideoURL(this.props.match.params.videoID)} frameBorder=\"{0}\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\r\n// </iframe>\r\n\r\n\r\n//                     </div>\r\n//                     <div className=\"col-5\">\r\n//                         <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n//                             {this.getVideo()}\r\n//                         </ul>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n}\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}