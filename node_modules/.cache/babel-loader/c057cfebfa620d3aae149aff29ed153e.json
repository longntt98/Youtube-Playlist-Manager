{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoPlayer.js\";\nimport React, { Component } from 'react';\nimport { db } from \"../firebase/firebase\";\nimport PlaylistItem from './MyPlaylistItem';\nimport VideoStream from './VideoStream';\nconst UID = localStorage.getItem(\"UID\");\n\nclass VideoPlayer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVideo = () => {\n      if (this.state.dataFromDB) {\n        return this.state.dataFromDB.map((value, key) => {\n          return /*#__PURE__*/React.createElement(PlaylistItem, {\n            videoID2: videoID => this.getVideoID(videoID),\n            key: key,\n            videoID: value.videoID,\n            videoThumbnail: value.videoThumbnail,\n            videoTitle: value.videoTitle,\n            playlistID: this.props.match.params.playlistID,\n            nextVideo: value.nextVideo,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 24\n            }\n          });\n        });\n      }\n    };\n\n    this.getVideoID = videoID => {\n      this.setState({\n        videoID: videoID\n      });\n    };\n\n    this.state = {\n      videoID: \"\",\n      dataFromDB: [],\n      nextVideo: \"\"\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps() {\n    const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`);\n    db1.on(\"value\", data => {\n      this.setState({\n        videoID: this.props.match.params.videoID,\n        nextVideo: data.val()\n      });\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n    const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo`);\n    db1.on(\"value\", data => {\n      let array = [];\n      data.forEach(element => {\n        array.push({\n          videoID: element.key,\n          videoTitle: element.val().videoTitle,\n          videoThumbnail: element.val().videoThumbnail,\n          nextVideo: element.val().nextVideo\n        });\n      });\n      this.setState({\n        dataFromDB: array\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoStream, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      style: {\n        height: \"430px\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, this.getVideo()))));\n  }\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoPlayer.js"],"names":["React","Component","db","PlaylistItem","VideoStream","UID","localStorage","getItem","VideoPlayer","constructor","props","getVideo","state","dataFromDB","map","value","key","videoID","getVideoID","videoThumbnail","videoTitle","match","params","playlistID","nextVideo","setState","UNSAFE_componentWillReceiveProps","db1","ref","on","data","val","UNSAFE_componentWillMount","array","forEach","element","push","render","height","overflowY","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { db } from \"../firebase/firebase\"\r\nimport PlaylistItem from './MyPlaylistItem';\r\nimport VideoStream from './VideoStream';\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\n\r\nclass VideoPlayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoID : \"\",\r\n            dataFromDB: [],\r\n            nextVideo: \"\",\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(){\r\n        const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo/${this.props.match.params.videoID}/nextVideo`);\r\n        db1.on(\"value\", data => {\r\n            this.setState({\r\n            videoID : this.props.match.params.videoID,\r\n            nextVideo: data.val()\r\n        });\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo`)\r\n        db1.on(\"value\", data => {\r\n            let array = [];\r\n            data.forEach(element => {\r\n                array.push({\r\n                    videoID: element.key,\r\n                    videoTitle: element.val().videoTitle,\r\n                    videoThumbnail: element.val().videoThumbnail,\r\n                    nextVideo: element.val().nextVideo,\r\n                })\r\n            })\r\n            this.setState({\r\n                dataFromDB: array\r\n            });\r\n        })\r\n    }\r\n\r\n    getVideo = () => {\r\n        if (this.state.dataFromDB) {\r\n            return this.state.dataFromDB.map((value, key) => {\r\n                return <PlaylistItem\r\n                    videoID2 = {(videoID)=>this.getVideoID(videoID)}\r\n                    key={key}\r\n                    videoID={value.videoID}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                    videoTitle={value.videoTitle}\r\n                    playlistID={this.props.match.params.playlistID}\r\n                    nextVideo={value.nextVideo}\r\n                />\r\n            })\r\n        }\r\n    }\r\n\r\n    getVideoID  = (videoID) => {\r\n        this.setState({\r\n            videoID: videoID\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">\r\n                        <VideoStream></VideoStream>\r\n                    </div>\r\n                    <div className=\"col-5\">\r\n                        <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n                            {this.getVideo()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}