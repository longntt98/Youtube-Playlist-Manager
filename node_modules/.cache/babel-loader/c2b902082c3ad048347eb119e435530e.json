{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\EditMyPlaylist.js\";\nimport React, { Component } from 'react';\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\nimport { db } from \"../firebase/firebase\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nconst UID = localStorage.getItem(\"UID\");\n\nclass EditMyPlaylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVideo = () => {\n      if (this.state.dataFromDB) {\n        return this.state.dataFromDB.map((value, key) => {\n          return /*#__PURE__*/React.createElement(EditMyPlaylistItem, {\n            key: key,\n            playlistID: this.props.match.params.id,\n            videoID: value.key,\n            videoTitle: value.videoTitle,\n            UID: UID,\n            videoThumbnail: value.videoThumbnail,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }\n          });\n        });\n      }\n    };\n\n    this.getThumbnail = id => {\n      let a = \"https://i.ytimg.com/vi/\";\n      let b = \"/hqdefault.jpg\";\n      this.setState({\n        thumbnailVideo: a + id + b\n      });\n    };\n\n    this.getTitle = id => {\n      let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\n      this.getJSON(a, (err, data) => {\n        if (err === null && data !== null) {\n          this.setState({\n            titleVideo: data.items[0].snippet.title\n          });\n        } else return err;\n      });\n    };\n\n    this.getJSON = function (url, callback) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'json';\n\n      xhr.onload = function () {\n        var status = xhr.status;\n\n        if (status === 200) {\n          callback(null, xhr.response);\n        } else {\n          callback(status, xhr.response);\n        }\n      };\n\n      xhr.send();\n    };\n\n    this.getItem = idVideo => {\n      this.setState({\n        titleVideo: \"\",\n        thumbnailVideo: \"\"\n      });\n      this.getThumbnail(idVideo);\n      this.getTitle(idVideo);\n      this.setState({\n        videoID: idVideo\n      });\n    };\n\n    this.addVideo = item => {\n      const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\n      db1.on(\"value\", data => {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.videoID}`);\n        db2.set({\n          videoThumbnail: this.state.thumbnailVideo,\n          videoTitle: this.state.titleVideo,\n          nextVideo: this.state.firstVideo,\n          previousVideo: this.state.lastVideo\n        });\n        const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.firstVideo}/previousVideo`);\n        db3.set(this.state.videoID);\n        const db4 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.lastVideo}/nextVideo`);\n        db4.set(this.state.videoID);\n        const db5 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`);\n        db5.set(this.state.videoID);\n      });\n    };\n\n    this.state = {\n      dataFromDB: [],\n      videoID: \"\",\n      thumbnailVideo: '',\n      titleVideo: '',\n      item: {},\n      firstVideo: \"\",\n      lastVideo: \"\"\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const db2 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\n    db2.on(\"value\", data => {\n      if (data.val()) {\n        const accessModifier = data.val().playlistAM == 0 ? \"private\" : \"public\";\n        const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\n        db1.on(\"value\", data1 => {\n          this.setState({\n            firstVideo: data1.val().firstVideo,\n            lastVideo: data1.val().lastVideo\n          });\n        });\n        const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\n        db3.on(\"value\", data => {\n          let array = [];\n          data.forEach(element => {\n            array.push({\n              key: element.key,\n              videoID: element.val().videoID,\n              videoTitle: element.val().videoTitle,\n              videoThumbnail: element.val().videoThumbnail\n            });\n          });\n          this.setState({\n            dataFromDB: [...array]\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid row edit-my-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Info PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo Playlist\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      getItem: item => {\n        this.getItem(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(SearchResult, {\n      thumbnailVideo: this.state.thumbnailVideo,\n      titleVideo: this.state.titleVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info\",\n      onClick: item => {\n        this.addVideo(this.state.item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, \"Add to Playlist\"), this.getVideo()));\n  }\n\n}\n\nexport default EditMyPlaylist;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/EditMyPlaylist.js"],"names":["React","Component","EditMyPlaylistItem","db","SearchBar","SearchResult","UID","localStorage","getItem","EditMyPlaylist","constructor","props","getVideo","state","dataFromDB","map","value","key","match","params","id","videoTitle","videoThumbnail","getThumbnail","a","b","setState","thumbnailVideo","getTitle","getJSON","err","data","titleVideo","items","snippet","title","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","idVideo","videoID","addVideo","item","db1","ref","on","accessModifier","val","playlistAM","db2","playlistID","set","nextVideo","firstVideo","previousVideo","lastVideo","db3","db4","db5","UNSAFE_componentWillMount","data1","array","forEach","element","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\r\nimport { db } from \"../firebase/firebase\"\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResult from \"./SearchResult\";\r\n\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\nclass EditMyPlaylist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromDB: [],\r\n            videoID: \"\",\r\n            thumbnailVideo: '',\r\n            titleVideo: '',\r\n            item: {},\r\n            firstVideo: \"\",\r\n            lastVideo: \"\"\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const db2 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\r\n        db2.on(\"value\", data => {\r\n            if (data.val()) {\r\n                const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n                const db1 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}`);\r\n                db1.on(\"value\", data1 => {\r\n                    this.setState({\r\n                        firstVideo: data1.val().firstVideo,\r\n                        lastVideo: data1.val().lastVideo,\r\n\r\n                    });\r\n                })\r\n                const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo`);\r\n                db3.on(\"value\", data => {\r\n                    let array = [];\r\n                    data.forEach(element => {\r\n                        array.push({\r\n                            key: element.key,\r\n                            videoID: element.val().videoID,\r\n                            videoTitle: element.val().videoTitle,\r\n                            videoThumbnail: element.val().videoThumbnail,\r\n\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        dataFromDB: [...array]\r\n                    });\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getVideo = () => {\r\n        if (this.state.dataFromDB) {\r\n            return this.state.dataFromDB.map((value, key) => {\r\n                return (<EditMyPlaylistItem\r\n                    key={key}\r\n                    playlistID={this.props.match.params.id}\r\n                    videoID={value.key}\r\n                    videoTitle={value.videoTitle}\r\n                    UID={UID}\r\n                    videoThumbnail={value.videoThumbnail}\r\n                />)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getThumbnail = (id) => {\r\n        let a = \"https://i.ytimg.com/vi/\";\r\n        let b = \"/hqdefault.jpg\";\r\n        this.setState({\r\n            thumbnailVideo: a + id + b\r\n        });\r\n    }\r\n\r\n    getTitle = (id) => {\r\n        let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\r\n        this.getJSON(a, (err, data) => {\r\n            if (err === null && data !== null) {\r\n                this.setState({\r\n                    titleVideo: data.items[0].snippet.title\r\n                });\r\n            }\r\n            else return err;\r\n        })\r\n    }\r\n\r\n    getJSON = function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status === 200) {\r\n                callback(null, xhr.response);\r\n            } else {\r\n                callback(status, xhr.response);\r\n            }\r\n        };\r\n        xhr.send();\r\n    };\r\n\r\n    getItem = (idVideo) => {\r\n        this.setState({\r\n            titleVideo: \"\",\r\n            thumbnailVideo: \"\"\r\n        });\r\n        this.getThumbnail(idVideo);\r\n        this.getTitle(idVideo);\r\n        this.setState({\r\n            videoID: idVideo\r\n        });\r\n    }\r\n\r\n\r\n    addVideo = (item) => {\r\n        const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}`);\r\n        db1.on(\"value\", data => {\r\n            const accessModifier = (data.val().playlistAM == 0) ? \"private\" : \"public\";\r\n            const db2 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.videoID}`);\r\n            db2.set({\r\n                videoThumbnail: this.state.thumbnailVideo,\r\n                videoTitle: this.state.titleVideo,\r\n                nextVideo: this.state.firstVideo,\r\n                previousVideo: this.state.lastVideo,\r\n            })\r\n            const db3 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.firstVideo}/previousVideo`);\r\n            db3.set(this.state.videoID)\r\n            const db4 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/playlistVideo/${this.state.lastVideo}/nextVideo`);\r\n            db4.set(this.state.videoID)\r\n            const db5 = db.ref(`playlist/${accessModifier}/${data.val().playlistID}/lastVideo`);\r\n            db5.set(this.state.videoID)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid row edit-my-playlist\">\r\n                <div className=\"col-5\">\r\n                    <p>\r\n                        Info PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo Playlist\r\n                    </p>\r\n                </div>\r\n                <form className=\"col-7\">\r\n                    <div className=\"mt-2 mb-3\" >\r\n                        <SearchBar getItem={(item) => { this.getItem(item) }} />\r\n                        <SearchResult thumbnailVideo={this.state.thumbnailVideo} titleVideo={this.state.titleVideo} />\r\n\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-info\" onClick={(item) => { this.addVideo(this.state.item) }}>Add to Playlist</button>\r\n                    {this.getVideo()}\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditMyPlaylist;"]},"metadata":{},"sourceType":"module"}