{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\EditMyPlaylist.js\";\nimport React, { Component } from 'react';\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\nimport { db } from \"../firebase/firebase\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nconst UID = localStorage.getItem(\"UID\");\n\nclass EditMyPlaylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getThumbnail = id => {\n      let a = \"https://i.ytimg.com/vi/\";\n      let b = \"/hqdefault.jpg\";\n      this.setState({\n        thumbnailVideo: a + id + b\n      });\n    };\n\n    this.getTitle = id => {\n      let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\n      this.getJSON(a, (err, data) => {\n        if (err === null && data !== null) {\n          this.setState({\n            titleVideo: data.items[0].snippet.title\n          });\n        } else return err;\n      });\n    };\n\n    this.getJSON = function (url, callback) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'json';\n\n      xhr.onload = function () {\n        var status = xhr.status;\n\n        if (status === 200) {\n          callback(null, xhr.response);\n        } else {\n          callback(status, xhr.response);\n        }\n      };\n\n      xhr.send();\n    };\n\n    this.getItem = idVideo => {\n      this.setState({\n        titleVideo: \"\",\n        thumbnailVideo: \"\"\n      });\n      this.getThumbnail(idVideo);\n      this.getTitle(idVideo);\n      this.setState({\n        videoID: idVideo\n      });\n    };\n\n    this.getVideo = () => {\n      if (this.state.dataFromDB) {\n        return this.state.dataFromDB.map((value, key) => {\n          return /*#__PURE__*/React.createElement(EditMyPlaylistItem, {\n            key: key,\n            id: value.key,\n            videoID: value.videoID,\n            videoTitle: value.videoTitle,\n            videoThumbnail: value.videoThumbnail,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 24\n            }\n          });\n        });\n      }\n    };\n\n    this.state = {\n      dataFromDB: [],\n      videoID: \"\",\n      idVideo: '',\n      thumbnailVideo: '',\n      titleVideo: '',\n      item: {}\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    let array = [];\n    const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}/playlistVideo`);\n    db1.on(\"value\", data => {\n      data.forEach(element => {\n        array.push({\n          key: element.val().key,\n          videoID: element.val().videoID,\n          videoTitle: element.val().videoTitle,\n          videoThumbnail: element.val().videoThumbnail\n        });\n      });\n      this.setState({\n        dataFromDB: array\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Info PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo Playlist\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_input mt-2 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      getItem: item => {\n        this.getItem(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SearchResult, {\n      thumbnailVideo: this.state.thumbnailVideo,\n      titleVideo: this.state.titleVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    })), this.getVideo()));\n  }\n\n}\n\nexport default EditMyPlaylist;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/EditMyPlaylist.js"],"names":["React","Component","EditMyPlaylistItem","db","SearchBar","SearchResult","UID","localStorage","getItem","EditMyPlaylist","constructor","props","getThumbnail","id","a","b","setState","thumbnailVideo","getTitle","getJSON","err","data","titleVideo","items","snippet","title","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","idVideo","videoID","getVideo","state","dataFromDB","map","value","key","videoTitle","videoThumbnail","item","UNSAFE_componentWillMount","array","db1","ref","match","params","on","forEach","element","push","val","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport EditMyPlaylistItem from './EditMyPlaylistItem';\r\nimport { db } from \"../firebase/firebase\"\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResult from \"./SearchResult\";\r\n\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\nclass EditMyPlaylist extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            dataFromDB : [],\r\n            videoID: \"\",\r\n            idVideo: '',\r\n            thumbnailVideo: '',\r\n            titleVideo: '',\r\n            item: {},\r\n        }}\r\n\r\n        UNSAFE_componentWillMount(){\r\n            let array = [];\r\n        const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.id}/playlistVideo`);\r\n        db1.on(\"value\", data => {\r\n            data.forEach(element=>{\r\n                array.push({\r\n                    key: element.val().key,\r\n                    videoID: element.val().videoID,\r\n                    videoTitle:element.val().videoTitle,\r\n                    videoThumbnail: element.val().videoThumbnail\r\n                })\r\n            })\r\n\r\n            this.setState({\r\n                dataFromDB : array\r\n            });\r\n        })\r\n        }\r\n        getThumbnail = (id) => {\r\n            let a = \"https://i.ytimg.com/vi/\";\r\n            let b = \"/hqdefault.jpg\";\r\n            this.setState({\r\n                thumbnailVideo: a + id + b\r\n            });\r\n        }\r\n    \r\n        getTitle = (id) => {\r\n            let a = 'https://www.googleapis.com/youtube/v3/videos?key=AIzaSyCAaefSzfa_SLpbO1Mt7hl8faCwfwBgk_E&fields=items(snippet(title))&part=snippet,statistics&id=' + id;\r\n            this.getJSON(a, (err, data) => {\r\n                if (err === null && data !== null) {\r\n                    this.setState({\r\n                        titleVideo: data.items[0].snippet.title\r\n                    });\r\n                }\r\n                else return err;\r\n            })\r\n        }\r\n    \r\n        getJSON = function (url, callback) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, true);\r\n            xhr.responseType = 'json';\r\n            xhr.onload = function () {\r\n                var status = xhr.status;\r\n                if (status === 200) {\r\n                    callback(null, xhr.response);\r\n                } else {\r\n                    callback(status, xhr.response);\r\n                }\r\n            };\r\n            xhr.send();\r\n        };\r\n    \r\n        getItem = (idVideo) => {\r\n            this.setState({\r\n                titleVideo: \"\",\r\n                thumbnailVideo: \"\"\r\n            });\r\n            this.getThumbnail(idVideo);\r\n            this.getTitle(idVideo);\r\n            this.setState({\r\n                videoID: idVideo\r\n            });\r\n        }\r\n    getVideo  = () => {\r\n        if(this.state.dataFromDB){\r\n            return this.state.dataFromDB.map((value,key)=>{\r\n                return <EditMyPlaylistItem\r\n                    key = {key}\r\n                    id = {value.key}\r\n                    videoID = {value.videoID}\r\n                    videoTitle = {value.videoTitle}\r\n                    videoThumbnail = {value.videoThumbnail}\r\n                />\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid row\">\r\n                <div className=\"col-5\">Info PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo PlaylistInfo Playlist</div>\r\n                <div className=\"col-7\">\r\n                <div className=\"header_input mt-2 mb-3\" >\r\n                            <SearchBar getItem={(item) => { this.getItem(item) }} />\r\n                            <SearchResult thumbnailVideo={this.state.thumbnailVideo} titleVideo={this.state.titleVideo} />\r\n                    \r\n                </div>\r\n                    {this.getVideo()}\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditMyPlaylist;"]},"metadata":{},"sourceType":"module"}