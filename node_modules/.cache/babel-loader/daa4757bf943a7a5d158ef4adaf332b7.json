{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoStream.js\";\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass VideoStream extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.videoOnReady = event => {\n      // access to player in all event handlers via event.target\n      event.target.playVideo();\n    };\n\n    this.videoStateChange = event => {\n      // if(event.data === 0) {\n      //     this.setState({\n      //         videoID: this.props.nextVideo\n      //     });\n      // }\n      console.log(event.data);\n    };\n  }\n\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         videoID: this.props.videoID\n  //     }\n  // }\n  UNSAFE_componentWillMount() {\n    this.setState({\n      videoID: this.props.videoID\n    });\n  }\n\n  render() {\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        autoplay: 1\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(YouTube, {\n      videoId: this.props.videoID,\n      opts: opts,\n      onReady: this.videoStateChange // onStateChange={this.videoStateChange}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default VideoStream;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoStream.js"],"names":["React","Component","YouTube","Link","Redirect","VideoStream","videoOnReady","event","target","playVideo","videoStateChange","console","log","data","UNSAFE_componentWillMount","setState","videoID","props","render","opts","height","width","playerVars","autoplay"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,IAAR,EAAaC,QAAb,QAA6B,kBAA7B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAahCK,YAbgC,GAahBC,KAAD,IAAW;AACtB;AACAA,MAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACH,KAhB+B;;AAAA,SAiBhCC,gBAjBgC,GAiBZH,KAAD,IAAW;AAC1B;AACA;AACA;AACA;AACA;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,IAAlB;AACC,KAxB2B;AAAA;;AAChC;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,yBAAyB,GAAE;AACvB,SAAKC,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD;AADV,KAAd;AAGH;;AAcDE,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF;AAHH,KAAb;AAOA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWD,OADxB;AAEI,MAAA,IAAI,EAAEG,IAFV;AAGI,MAAA,OAAO,EAAE,KAAKT,gBAHlB,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AA5C+B;;AA+CpC,eAAeL,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport {Link,Redirect } from \"react-router-dom\"\r\n\r\nclass VideoStream extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         videoID: this.props.videoID\r\n    //     }\r\n    // }\r\n\r\n    UNSAFE_componentWillMount(){\r\n        this.setState({\r\n            videoID: this.props.videoID\r\n        });\r\n    }\r\n    videoOnReady = (event) => {\r\n        // access to player in all event handlers via event.target\r\n        event.target.playVideo();\r\n    }\r\n    videoStateChange = (event) => {\r\n        // if(event.data === 0) {\r\n        //     this.setState({\r\n        //         videoID: this.props.nextVideo\r\n        //     });\r\n        // }\r\n        console.log(event.data);\r\n        }\r\n\r\n    render() {\r\n        const opts = {\r\n            height: '390',\r\n            width: '640',\r\n            playerVars: {\r\n                autoplay: 1,\r\n            },\r\n        };\r\n        return (\r\n            <div>\r\n                <YouTube\r\n                    videoId={this.props.videoID}\r\n                    opts={opts}\r\n                    onReady={this.videoStateChange}\r\n                    // onStateChange={this.videoStateChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoStream;"]},"metadata":{},"sourceType":"module"}