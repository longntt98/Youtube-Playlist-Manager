{"ast":null,"code":"import React, { Component } from 'react';\nimport { db } from \"../firebase/firebase\";\nimport PlaylistItem from './MyPlaylistItem';\nconst UID = localStorage.getItem(\"UID\");\n\nclass VideoPlayer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fisrtFunction = () => {\n      src = \"https://www.youtube.com/player_api\";\n    };\n  }\n\n  onYouTubePlayerAPIReady() {\n    this.fisrtFunction();\n    var player;\n    player = new YT.Player('player', {\n      height: '390',\n      width: '640',\n      videoId: '0Bmhjf0rKe8',\n      events: {\n        'onReady': this.onPlayerReady(),\n        'onStateChange': this.onPlayerStateChange()\n      }\n    });\n  } // autoplay video\n\n\n  onPlayerReady(event) {\n    event.target.playVideo();\n  } // when video ends\n\n\n  onPlayerStateChange(event) {\n    if (event.data === 0) {\n      alert('done');\n    }\n  }\n\n  render() {\n    this.onYouTubePlayerAPIReady();\n    return 1;\n  } //     constructor(props){\n  //         super(props);\n  //         this.state={\n  //             dataFromDB : []\n  //         }}\n  //     getVideoURL = (id) => {\n  //         return \"https://www.youtube.com/embed/\" + id +\"?autoplay=1\";\n  //     }\n  //     UNSAFE_componentWillMount(){\n  //         const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo`)\n  //         db1.on(\"value\", data => {\n  //             let array= [];\n  //             data.forEach(element => {\n  //                 array.push({\n  //                     videoID : element.val().videoID,\n  //                     videoTitle: element.val().videoTitle,\n  //                     videoThumbnail: element.val().videoThumbnail\n  //                 })\n  //             })\n  //             this.setState({\n  //                 dataFromDB: array\n  //             });\n  //         })\n  //     }\n  //     getVideo  = () => {\n  //         if(this.state.dataFromDB){\n  //             return this.state.dataFromDB.map((value, key)=>{\n  //                 return <PlaylistItem\n  //                     key = {key}\n  //                     videoID = {value.videoID}\n  //                     videoThumbnail = {value.videoThumbnail}\n  //                     videoTitle = {value.videoTitle}\n  //                     playlistID = {this.props.match.params.playlistID}\n  //                 />\n  //             })\n  //         }\n  //     }\n  //     render() {\n  //         return (\n  //             <div className=\"container\">\n  //                 <div className=\"row\">\n  //                     <div className=\"col-7\">\n  //                     <iframe width={\"100%\"} height={\"100%\"} src={this.getVideoURL(this.props.match.params.videoID)} frameBorder=\"{0}\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\n  // </iframe>\n  //                     </div>\n  //                     <div className=\"col-5\">\n  //                         <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\n  //                             {this.getVideo()}\n  //                         </ul>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         );\n  //     }\n\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoPlayer.js"],"names":["React","Component","db","PlaylistItem","UID","localStorage","getItem","VideoPlayer","fisrtFunction","src","onYouTubePlayerAPIReady","player","YT","Player","height","width","videoId","events","onPlayerReady","onPlayerStateChange","event","target","playVideo","data","alert","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,EAAR,QAAiB,sBAAjB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAEhCO,aAFgC,GAEf,MAAM;AACnBC,MAAAA,GAAG,GAAC,oCAAJ;AACH,KAJ+B;AAAA;;AAMhCC,EAAAA,uBAAuB,GAAG;AACtB,SAAKF,aAAL;AACA,QAAIG,MAAJ;AACAA,IAAAA,MAAM,GAAG,IAAIC,EAAE,CAACC,MAAP,CAAc,QAAd,EAAwB;AAC/BC,MAAAA,MAAM,EAAE,KADuB;AAE/BC,MAAAA,KAAK,EAAE,KAFwB;AAG/BC,MAAAA,OAAO,EAAE,aAHsB;AAI/BC,MAAAA,MAAM,EAAE;AACN,mBAAW,KAAKC,aAAL,EADL;AAEN,yBAAiB,KAAKC,mBAAL;AAFX;AAJuB,KAAxB,CAAT;AASH,GAlB+B,CAoBhC;;;AACCD,EAAAA,aAAa,CAACE,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACH,GAvB+B,CAyBhC;;;AACCH,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACxB,QAAGA,KAAK,CAACG,IAAN,KAAe,CAAlB,EAAqB;AACjBC,MAAAA,KAAK,CAAC,MAAD,CAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AACJ,SAAKf,uBAAL;AACA,WAAO,CAAP;AACH,GAnC+B,CAsCpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjGoC;;AAoGpC,eAAeH,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {db} from \"../firebase/firebase\"\r\nimport PlaylistItem from './MyPlaylistItem';\r\n\r\nconst UID = localStorage.getItem(\"UID\")\r\n\r\nclass VideoPlayer extends Component {\r\n\r\n    fisrtFunction  = () => {\r\n        src=\"https://www.youtube.com/player_api\";\r\n    }\r\n\r\n    onYouTubePlayerAPIReady() {\r\n        this.fisrtFunction();\r\n        var player;\r\n        player = new YT.Player('player', {\r\n          height: '390',\r\n          width: '640',\r\n          videoId: '0Bmhjf0rKe8',\r\n          events: {\r\n            'onReady': this.onPlayerReady(),\r\n            'onStateChange': this.onPlayerStateChange()\r\n          }\r\n        });\r\n    }\r\n\r\n    // autoplay video\r\n     onPlayerReady(event) {\r\n        event.target.playVideo();\r\n    }\r\n\r\n    // when video ends\r\n     onPlayerStateChange(event) {        \r\n        if(event.data === 0) {            \r\n            alert('done');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        this.onYouTubePlayerAPIReady();\r\n        return 1;\r\n    }\r\n\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//             dataFromDB : []\r\n//         }}\r\n//     getVideoURL = (id) => {\r\n//         return \"https://www.youtube.com/embed/\" + id +\"?autoplay=1\";\r\n//     }\r\n\r\n//     UNSAFE_componentWillMount(){\r\n//         const db1 = db.ref(`users/${UID}/playlistList/${this.props.match.params.playlistID}/playlistVideo`)\r\n//         db1.on(\"value\", data => {\r\n//             let array= [];\r\n//             data.forEach(element => {\r\n//                 array.push({\r\n//                     videoID : element.val().videoID,\r\n//                     videoTitle: element.val().videoTitle,\r\n//                     videoThumbnail: element.val().videoThumbnail\r\n//                 })\r\n//             })\r\n//             this.setState({\r\n//                 dataFromDB: array\r\n//             });\r\n//         })\r\n//     }\r\n\r\n//     getVideo  = () => {\r\n//         if(this.state.dataFromDB){\r\n//             return this.state.dataFromDB.map((value, key)=>{\r\n//                 return <PlaylistItem\r\n//                     key = {key}\r\n//                     videoID = {value.videoID}\r\n//                     videoThumbnail = {value.videoThumbnail}\r\n//                     videoTitle = {value.videoTitle}\r\n//                     playlistID = {this.props.match.params.playlistID}\r\n//                 />\r\n//             })\r\n//         }\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-7\">\r\n//                     <iframe width={\"100%\"} height={\"100%\"} src={this.getVideoURL(this.props.match.params.videoID)} frameBorder=\"{0}\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\r\n// </iframe>\r\n\r\n\r\n//                     </div>\r\n//                     <div className=\"col-5\">\r\n//                         <ul className=\"list-group\" style={{ height: \"430px\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n//                             {this.getVideo()}\r\n//                         </ul>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n}\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}