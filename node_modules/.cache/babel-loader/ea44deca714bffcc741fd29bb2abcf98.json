{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoStream.js\";\nimport React, { Component, useState } from 'react';\nimport YouTube from 'react-youtube';\nimport { useHistory, Redirect } from 'react-router-dom'; // class VideoStream extends Component {\n//     constructor(props) {\n//         super(props);\n//         state = {\n//             redirect: false,\n//         }\n//     }\n//     videoOnReady = (event) => {\n//         event.target.playVideo();\n//     }\n//     // videoStateChange = (event) => {\n//     //     if (event.data === 0) {\n//     //         func(props.nextVideo)\n//     //     }\n//     // }\n//     // videoStateChange = (event) => {\n//     //     if (event.data === 0) {\n//     //         setState({redirect : true});\n//     //     }\n//     // }\n//     videoStateChange = (event) => {\n//         if (event.data === 0) {\n//             window.location.replace(`/videoplayer/${props.playlistID}.${props.nextVideo}`)\n//         }\n//     }\n//     func  = (param) => {\n//         props.func(param)\n//     }\n//     render() {\n// const opts = {\n//     height: '550',\n//     width: '100%',\n//     playerVars: {\n//         autoplay: 1,\n//     },\n//         };\n//         // state.redirect ? (\n//         //     setState({redirect:false}),\n//         // <Redirect to ={\"/videoplayer/\"+props.playlistID + \".\" + props.nextVideo}/>) : (\n// return    (<div>\n//         <YouTube\n//             videoId={props.videoID}\n//             opts={opts}\n//             onReady={videoStateChange}\n//             onStateChange={videoStateChange}\n//         />\n//     </div>)\n// );\n//     }\n// }\n\nfunction VideoStream(props) {\n  const history = useHistory();\n  const [redirect, setRedirect] = useState(false);\n  const opts = {\n    height: '550',\n    width: '100%',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const videoOnReady = event => {\n    event.target.playVideo();\n  };\n\n  const videoStateChange = event => {\n    if (event.data == 0) {\n      history.push(\"/videoplayer/\" + props.playlistID + \".\" + props.nextVideo);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(YouTube, {\n    videoId: props.videoID,\n    opts: opts,\n    onReady: videoOnReady,\n    onStateChange: videoStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default VideoStream;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoStream.js"],"names":["React","Component","useState","YouTube","useHistory","Redirect","VideoStream","props","history","redirect","setRedirect","opts","height","width","playerVars","autoplay","videoOnReady","event","target","playVideo","videoStateChange","data","push","playlistID","nextVideo","videoID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMS,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE;AADF;AAHH,GAAb;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAChC,QAAIA,KAAK,CAACI,IAAN,IAAc,CAAlB,EAAqB;AACjBb,MAAAA,OAAO,CAACc,IAAR,CAAa,kBAAkBf,KAAK,CAACgB,UAAxB,GAAqC,GAArC,GAA2ChB,KAAK,CAACiB,SAA9D;AACH;AACJ,GAJD;;AAKA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AACI,IAAA,OAAO,EAAEjB,KAAK,CAACkB,OADnB;AAEI,IAAA,IAAI,EAAEd,IAFV;AAGI,IAAA,OAAO,EAAEK,YAHb;AAII,IAAA,aAAa,EAAEI,gBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAAR;AAWH;;AAED,eAAed,WAAf","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\n\r\n// class VideoStream extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         state = {\r\n//             redirect: false,\r\n//         }\r\n//     }\r\n//     videoOnReady = (event) => {\r\n//         event.target.playVideo();\r\n//     }\r\n//     // videoStateChange = (event) => {\r\n//     //     if (event.data === 0) {\r\n//     //         func(props.nextVideo)\r\n//     //     }\r\n//     // }\r\n//     // videoStateChange = (event) => {\r\n//     //     if (event.data === 0) {\r\n//     //         setState({redirect : true});\r\n//     //     }\r\n//     // }\r\n//     videoStateChange = (event) => {\r\n//         if (event.data === 0) {\r\n//             window.location.replace(`/videoplayer/${props.playlistID}.${props.nextVideo}`)\r\n//         }\r\n//     }\r\n\r\n//     func  = (param) => {\r\n//         props.func(param)\r\n//     }\r\n\r\n//     render() {\r\n// const opts = {\r\n//     height: '550',\r\n//     width: '100%',\r\n//     playerVars: {\r\n//         autoplay: 1,\r\n//     },\r\n//         };\r\n\r\n//         // state.redirect ? (\r\n//         //     setState({redirect:false}),\r\n//         // <Redirect to ={\"/videoplayer/\"+props.playlistID + \".\" + props.nextVideo}/>) : (\r\n// return    (<div>\r\n//         <YouTube\r\n//             videoId={props.videoID}\r\n//             opts={opts}\r\n//             onReady={videoStateChange}\r\n//             onStateChange={videoStateChange}\r\n//         />\r\n\r\n//     </div>)\r\n// );\r\n//     }\r\n// }\r\n\r\nfunction VideoStream(props) {\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const opts = {\r\n        height: '550',\r\n        width: '100%',\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n    const videoOnReady = (event) => {\r\n        event.target.playVideo();\r\n    }\r\n    const videoStateChange = (event) => {\r\n        if (event.data == 0) {\r\n            history.push(\"/videoplayer/\" + props.playlistID + \".\" + props.nextVideo);\r\n        }\r\n    }\r\n    return (<div>\r\n            <YouTube\r\n                videoId={props.videoID}\r\n                opts={opts}\r\n                onReady={videoOnReady}\r\n                onStateChange={videoStateChange}\r\n            />\r\n\r\n        </div>)\r\n\r\n\r\n}\r\n\r\nexport default VideoStream;"]},"metadata":{},"sourceType":"module"}