{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long Nguyen\\\\Desktop\\\\trainning react\\\\Youtube-Playlist-Manager\\\\src\\\\components\\\\VideoStream.js\";\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { useHistory, Link, Redirect } from 'react-router-dom'; // const history = useHistory();\n\nclass VideoStream extends Component {\n  constructor(props) {\n    super(props);\n\n    this.videoOnReady = event => {\n      event.target.playVideo();\n    };\n\n    this.videoStateChange = event => {\n      if (event.data === 0) {\n        window.location.replace(`/videoplayer/${this.props.playlistID}.${this.props.nextVideo}`);\n      }\n    };\n\n    this.func = param => {\n      this.props.func(param);\n    };\n\n    this.state = {\n      redirect: false\n    };\n  }\n\n  render() {\n    const opts = {\n      height: '550',\n      width: '100%',\n      playerVars: {\n        autoplay: 1\n      }\n    }; // this.state.redirect ? (\n    //     this.setState({redirect:false}),\n    // <Redirect to ={\"/videoplayer/\"+this.props.playlistID + \".\" + this.props.nextVideo}/>) : (\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(YouTube, {\n      videoId: this.props.videoID,\n      opts: opts,\n      onReady: this.videoStateChange,\n      onStateChange: this.videoStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    })); // );\n  }\n\n}\n\nexport default VideoStream;","map":{"version":3,"sources":["C:/Users/Long Nguyen/Desktop/trainning react/Youtube-Playlist-Manager/src/components/VideoStream.js"],"names":["React","Component","YouTube","useHistory","Link","Redirect","VideoStream","constructor","props","videoOnReady","event","target","playVideo","videoStateChange","data","window","location","replace","playlistID","nextVideo","func","param","state","redirect","render","opts","height","width","playerVars","autoplay","videoID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,QAA2C,kBAA3C,C,CAEA;;AACA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,YANmB,GAMHC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACH,KARkB;;AAAA,SAmBnBC,gBAnBmB,GAmBCH,KAAD,IAAW;AAC1B,UAAIA,KAAK,CAACI,IAAN,KAAe,CAAnB,EAAsB;AAClBC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAyB,gBAAe,KAAKT,KAAL,CAAWU,UAAW,IAAG,KAAKV,KAAL,CAAWW,SAAU,EAAtF;AACH;AACJ,KAvBkB;;AAAA,SAyBnBC,IAzBmB,GAyBVC,KAAD,IAAW;AACf,WAAKb,KAAL,CAAWY,IAAX,CAAgBC,KAAhB;AACH,KA3BkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAwBDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,KAAK,EAAE,MAFE;AAGTC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF;AAHH,KAAb,CADK,CASL;AACA;AACA;;AACA,wBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,OAAD;AACI,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWsB,OADxB;AAEI,MAAA,IAAI,EAAEL,IAFV;AAGI,MAAA,OAAO,EAAE,KAAKZ,gBAHlB;AAII,MAAA,aAAa,EAAE,KAAKA,gBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAX,CAZK,CAqBL;AACH;;AApD+B;;AAuDpC,eAAeP,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { useHistory, Link, Redirect } from 'react-router-dom';\r\n\r\n// const history = useHistory();\r\nclass VideoStream extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n        }\r\n    }\r\n    videoOnReady = (event) => {\r\n        event.target.playVideo();\r\n    }\r\n    // videoStateChange = (event) => {\r\n    //     if (event.data === 0) {\r\n    //         this.func(this.props.nextVideo)\r\n    //     }\r\n    // }\r\n    // videoStateChange = (event) => {\r\n    //     if (event.data === 0) {\r\n    //         this.setState({redirect : true});\r\n    //     }\r\n    // }\r\n    videoStateChange = (event) => {\r\n        if (event.data === 0) {\r\n            window.location.replace(`/videoplayer/${this.props.playlistID}.${this.props.nextVideo}`)\r\n        }\r\n    }\r\n\r\n    func  = (param) => {\r\n        this.props.func(param)\r\n    }\r\n\r\n    render() {\r\n        const opts = {\r\n            height: '550',\r\n            width: '100%',\r\n            playerVars: {\r\n                autoplay: 1,\r\n            },\r\n        };\r\n         \r\n        // this.state.redirect ? (\r\n        //     this.setState({redirect:false}),\r\n        // <Redirect to ={\"/videoplayer/\"+this.props.playlistID + \".\" + this.props.nextVideo}/>) : (\r\n        return    (<div>\r\n                <YouTube\r\n                    videoId={this.props.videoID}\r\n                    opts={opts}\r\n                    onReady={this.videoStateChange}\r\n                    onStateChange={this.videoStateChange}\r\n                />\r\n                \r\n            </div>)\r\n        // );\r\n    }\r\n}\r\n\r\nexport default VideoStream;"]},"metadata":{},"sourceType":"module"}